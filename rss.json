{
    "version": "https://jsonfeed.org/version/1",
    "title": "DEV Community",
    "home_page_url": "https://dev.to/",
    "description": "A constructive and inclusive social network for software developers. With you every step of your journey.",
    "items": [
      {
        "guid": "https://dev.to/w3webs/frontend-developer-learning-path-2021-with-50-free-resources-20e2",
        "url": "https://dev.to/w3webs/frontend-developer-learning-path-2021-with-50-free-resources-20e2",
        "title": "Frontend Developer Learning Path 2021 [With 50+ Free Resources]",
        "content_html": "<p>A front-end developer is a person who develops the user interface of the website and applications. They are responsible for determining the structure and design of the web application, build features to improve user experience, make a balance between design and functionality, optimize web app for different devices, optimize pages for speed and scalability, use different markup languages for coding web pages, maintain brand consistency and write reusable codes. In simple terms, front-end development refers to the lines of code that determine the operation and structure of the user interface.</p>\n<p>However, the front-end web development is not just limited to using HTML, CSS or JS instead there are a bunch of other technologies that you need to learn if you wanna become a prominent developer this year. </p>\n\n<p><span>Read More : </span><b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/frontend-developer-roadmap-2022/&amp;ved=2ahUKEwjHuLas1vvzAhVVKysKHf11DL0QFnoECAcQAQ&amp;usg=AOvVaw2vT9KZNTF37GNs6w16X2lN\"><span>Frontend Developer Learning Path 2021 [With 50+ Free Resources]  </span></a></b></p>",
        "summary": "<p>A front-end developer is a person who develops the user interface of the website and applications. They are responsible for determining the structure and design of the web application, build features to improve user experience, make a balance between design and functionality, optimize web app for different devices, optimize pages for speed and scalability, use different markup languages for coding web pages, maintain brand consistency and write reusable codes. In simple terms, front-end development refers to the lines of code that determine the operation and structure of the user interface.</p>\n<p>However, the front-end web development is not just limited to using HTML, CSS or JS instead there are a bunch of other technologies that you need to learn if you wanna become a prominent developer this year. </p>\n\n<p><span>Read More : </span><b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/frontend-developer-roadmap-2022/&amp;ved=2ahUKEwjHuLas1vvzAhVVKysKHf11DL0QFnoECAcQAQ&amp;usg=AOvVaw2vT9KZNTF37GNs6w16X2lN\"><span>Frontend Developer Learning Path 2021 [With 50+ Free Resources]  </span></a></b></p>",
        "date_published": "2021-11-03T07:32:15.000Z",
        "author": {
          "name": "W3School"
        }
      },
      {
        "guid": "https://dev.to/carlosespada/html-tags-textarea-344m",
        "url": "https://dev.to/carlosespada/html-tags-textarea-344m",
        "title": "HTML tags | textarea",
        "content_html": "<p>It is used to <strong>represent a multi-line plain-text editing control</strong>, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.</p>\n\n<p>The content is entered between the opening and closing tags. <code>&lt;textarea&gt;</code> does not support the <code>value</code> attribute.</p>\n\n<p>It can hold an unlimited number of characters and its size is specified by the <code>&lt;cols&gt;</code> and <code>&lt;rows&gt;</code> attributes (or with CSS).</p>\n\n<h3>\n  <a href=\"#autocomplete\">\n  </a>\n  autocomplete\n</h3>\n\n<p>This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:</p>\n\n<ul>\n<li>\n<strong>off</strong>: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.</li>\n<li>\n<strong>on</strong>: The browser can automatically complete the value based on values that the user has entered during previous uses.</li>\n</ul>\n\n<p>If the <code>autocomplete</code> attribute is not specified on a <code>&lt;textarea&gt;</code> element, then the browser uses the <code>autocomplete</code> attribute value of the <code>&lt;textarea&gt;</code> element's form owner. The form owner is either the <code>&lt;form&gt;</code> element that this <code>&lt;textarea&gt;</code> element is a descendant of or the form element whose <code>id</code> is specified by the <code>form</code> attribute of the input element.</p>\n\n<h3>\n  <a href=\"#autofocus\">\n  </a>\n  autofocus\n</h3>\n\n<p>This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified.</p>\n\n<h3>\n  <a href=\"#cols\">\n  </a>\n  cols\n</h3>\n\n<p>The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is <code>20</code>.</p>\n\n<h3>\n  <a href=\"#disabled\">\n  </a>\n  disabled\n</h3>\n\n<p>This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example <code>&lt;fieldset&gt;</code>; if there is no containing element when the disabled attribute is set, the control is enabled.</p>\n\n<h3>\n  <a href=\"#form\">\n  </a>\n  form\n</h3>\n\n<p>The form element that the <code>&lt;textarea&gt;</code> element is associated with (its \"form owner\"). The value of the attribute must be the <code>id</code> of a form element in the same document. If this attribute is not specified, the <code>&lt;textarea&gt;</code> element must be a descendant of a form element. This attribute enables you to place <code>&lt;textarea&gt;</code> elements anywhere within a document, not just as descendants of form elements.</p>\n\n<h3>\n  <a href=\"#maxlength\">\n  </a>\n  maxlength\n</h3>\n\n<p>The maximum number of characters (UTF-16 code units) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters.</p>\n\n<h3>\n  <a href=\"#minlength\">\n  </a>\n  minlength\n</h3>\n\n<p>The minimum number of characters (UTF-16 code units) required that the user should enter.</p>\n\n<h3>\n  <a href=\"#name\">\n  </a>\n  name\n</h3>\n\n<p>The name of the control.</p>\n\n<h3>\n  <a href=\"#placeholder\">\n  </a>\n  placeholder\n</h3>\n\n<p>A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.</p>\n\n<p><strong>Placeholders should only be used to show an example of the type of data</strong> that should be entered into a form; they are not a substitute for a proper <code>&lt;label&gt;</code> element tied to the input.</p>\n\n<h3>\n  <a href=\"#readonly\">\n  </a>\n  readonly\n</h3>\n\n<p>This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the <code>disabled</code> attribute, the <code>readonly</code> attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.</p>\n\n<h3>\n  <a href=\"#required\">\n  </a>\n  required\n</h3>\n\n<p>This attribute specifies that the user must fill in a value before submitting a form.</p>\n\n<h3>\n  <a href=\"#rows\">\n  </a>\n  rows\n</h3>\n\n<p>The number of visible text lines for the control.</p>\n\n<h3>\n  <a href=\"#spellcheck\">\n  </a>\n  spellcheck\n</h3>\n\n<p>Specifies whether the <code>&lt;textarea&gt;</code> is subject to spell checking by the underlying browser/OS. The value can be:</p>\n\n<ul>\n<li>\n<strong>true</strong>: Indicates that the element needs to have its spelling and grammar checked.</li>\n<li>\n<strong>default</strong>: Indicates that the element acts according to a default behavior, possibly based on the parent element's own <code>spellcheck</code> value.</li>\n<li>\n<strong>false</strong>: Indicates that the element should not be spell checked.</li>\n</ul>\n\n<h3>\n  <a href=\"#wrap\">\n  </a>\n  wrap\n</h3>\n\n<p>Indicates how the control wraps text. Possible values are:</p>\n\n<ul>\n<li>\n<strong>hard</strong>: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the <code>cols</code> attribute must also be specified for this to take effect.</li>\n<li>\n<strong>soft</strong>: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks. This is the default value.</li>\n</ul>\n\n<p>In most browsers, <code>&lt;textarea&gt;</code>s are resizable — you'll notice the drag handle in the right hand corner, which can be used to alter the size of the element on the page. This is controlled by the <code>resize</code> CSS property — resizing is enabled by default, but you can explicitly disable it using a resize value of none:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>textarea {\n  resize: none;\n}\n</code></pre>\n\n</div>\n\n\n\n<p>Valid and invalid values of a <code>&lt;textarea&gt;</code> element (e.g. those within, and outside the bounds set by <code>minlength</code>, <code>maxlength</code> or <code>required</code>) can be highlighted using the <code>:valid</code> and <code>:invalid</code> pseudo-classes.</p>\n\n<ul>\n<li>Type: <em>inline-block</em>\n</li>\n<li>Self-closing: <em>No</em>\n</li>\n<li>Semantic value: <em>No</em>\n</li>\n</ul>\n\n<p><a href=\"https://www.w3schools.com/tags/tag_textarea.asp\">Definition</a> | <a href=\"https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_textarea\">Example</a> | <a href=\"https://caniuse.com/mdn-html_elements_textarea\">Support</a></p>",
        "summary": "<p>It is used to <strong>represent a multi-line plain-text editing control</strong>, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.</p>\n\n<p>The content is entered between the opening and closing tags. <code>&lt;textarea&gt;</code> does not support the <code>value</code> attribute.</p>\n\n<p>It can hold an unlimited number of characters and its size is specified by the <code>&lt;cols&gt;</code> and <code>&lt;rows&gt;</code> attributes (or with CSS).</p>\n\n<h3>\n  <a href=\"#autocomplete\">\n  </a>\n  autocomplete\n</h3>\n\n<p>This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:</p>\n\n<ul>\n<li>\n<strong>off</strong>: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.</li>\n<li>\n<strong>on</strong>: The browser can automatically complete the value based on values that the user has entered during previous uses.</li>\n</ul>\n\n<p>If the <code>autocomplete</code> attribute is not specified on a <code>&lt;textarea&gt;</code> element, then the browser uses the <code>autocomplete</code> attribute value of the <code>&lt;textarea&gt;</code> element's form owner. The form owner is either the <code>&lt;form&gt;</code> element that this <code>&lt;textarea&gt;</code> element is a descendant of or the form element whose <code>id</code> is specified by the <code>form</code> attribute of the input element.</p>\n\n<h3>\n  <a href=\"#autofocus\">\n  </a>\n  autofocus\n</h3>\n\n<p>This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified.</p>\n\n<h3>\n  <a href=\"#cols\">\n  </a>\n  cols\n</h3>\n\n<p>The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is <code>20</code>.</p>\n\n<h3>\n  <a href=\"#disabled\">\n  </a>\n  disabled\n</h3>\n\n<p>This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example <code>&lt;fieldset&gt;</code>; if there is no containing element when the disabled attribute is set, the control is enabled.</p>\n\n<h3>\n  <a href=\"#form\">\n  </a>\n  form\n</h3>\n\n<p>The form element that the <code>&lt;textarea&gt;</code> element is associated with (its \"form owner\"). The value of the attribute must be the <code>id</code> of a form element in the same document. If this attribute is not specified, the <code>&lt;textarea&gt;</code> element must be a descendant of a form element. This attribute enables you to place <code>&lt;textarea&gt;</code> elements anywhere within a document, not just as descendants of form elements.</p>\n\n<h3>\n  <a href=\"#maxlength\">\n  </a>\n  maxlength\n</h3>\n\n<p>The maximum number of characters (UTF-16 code units) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters.</p>\n\n<h3>\n  <a href=\"#minlength\">\n  </a>\n  minlength\n</h3>\n\n<p>The minimum number of characters (UTF-16 code units) required that the user should enter.</p>\n\n<h3>\n  <a href=\"#name\">\n  </a>\n  name\n</h3>\n\n<p>The name of the control.</p>\n\n<h3>\n  <a href=\"#placeholder\">\n  </a>\n  placeholder\n</h3>\n\n<p>A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.</p>\n\n<p><strong>Placeholders should only be used to show an example of the type of data</strong> that should be entered into a form; they are not a substitute for a proper <code>&lt;label&gt;</code> element tied to the input.</p>\n\n<h3>\n  <a href=\"#readonly\">\n  </a>\n  readonly\n</h3>\n\n<p>This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the <code>disabled</code> attribute, the <code>readonly</code> attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.</p>\n\n<h3>\n  <a href=\"#required\">\n  </a>\n  required\n</h3>\n\n<p>This attribute specifies that the user must fill in a value before submitting a form.</p>\n\n<h3>\n  <a href=\"#rows\">\n  </a>\n  rows\n</h3>\n\n<p>The number of visible text lines for the control.</p>\n\n<h3>\n  <a href=\"#spellcheck\">\n  </a>\n  spellcheck\n</h3>\n\n<p>Specifies whether the <code>&lt;textarea&gt;</code> is subject to spell checking by the underlying browser/OS. The value can be:</p>\n\n<ul>\n<li>\n<strong>true</strong>: Indicates that the element needs to have its spelling and grammar checked.</li>\n<li>\n<strong>default</strong>: Indicates that the element acts according to a default behavior, possibly based on the parent element's own <code>spellcheck</code> value.</li>\n<li>\n<strong>false</strong>: Indicates that the element should not be spell checked.</li>\n</ul>\n\n<h3>\n  <a href=\"#wrap\">\n  </a>\n  wrap\n</h3>\n\n<p>Indicates how the control wraps text. Possible values are:</p>\n\n<ul>\n<li>\n<strong>hard</strong>: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the <code>cols</code> attribute must also be specified for this to take effect.</li>\n<li>\n<strong>soft</strong>: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks. This is the default value.</li>\n</ul>\n\n<p>In most browsers, <code>&lt;textarea&gt;</code>s are resizable — you'll notice the drag handle in the right hand corner, which can be used to alter the size of the element on the page. This is controlled by the <code>resize</code> CSS property — resizing is enabled by default, but you can explicitly disable it using a resize value of none:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>textarea {\n  resize: none;\n}\n</code></pre>\n\n</div>\n\n\n\n<p>Valid and invalid values of a <code>&lt;textarea&gt;</code> element (e.g. those within, and outside the bounds set by <code>minlength</code>, <code>maxlength</code> or <code>required</code>) can be highlighted using the <code>:valid</code> and <code>:invalid</code> pseudo-classes.</p>\n\n<ul>\n<li>Type: <em>inline-block</em>\n</li>\n<li>Self-closing: <em>No</em>\n</li>\n<li>Semantic value: <em>No</em>\n</li>\n</ul>\n\n<p><a href=\"https://www.w3schools.com/tags/tag_textarea.asp\">Definition</a> | <a href=\"https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_textarea\">Example</a> | <a href=\"https://caniuse.com/mdn-html_elements_textarea\">Support</a></p>",
        "date_published": "2021-11-03T07:27:31.000Z",
        "author": {
          "name": "Carlos Espada"
        }
      },
      {
        "guid": "https://dev.to/w3webs/backend-developer-learning-path-2021-with-proper-resources-f42",
        "url": "https://dev.to/w3webs/backend-developer-learning-path-2021-with-proper-resources-f42",
        "title": "Backend Developer Learning Path 2021 [With 50+ Free Resources]",
        "content_html": "<p><span><span><b>Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, …</b></span></span></p>\n<p><span>Read More: <b><a href=\"https://www.codelivly.com/backend-web-developer-roadmap/\">Backend Developer Learning Path 2021 [With 50+ Free Resources]</a></b></span></p>",
        "summary": "<p><span><span><b>Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, …</b></span></span></p>\n<p><span>Read More: <b><a href=\"https://www.codelivly.com/backend-web-developer-roadmap/\">Backend Developer Learning Path 2021 [With 50+ Free Resources]</a></b></span></p>",
        "date_published": "2021-11-03T07:27:16.000Z",
        "author": {
          "name": "W3School"
        }
      },
      {
        "guid": "https://dev.to/dallington256/improving-your-reasoning-with-arrays-in-java-5b1j",
        "url": "https://dev.to/dallington256/improving-your-reasoning-with-arrays-in-java-5b1j",
        "title": "Improving your reasoning with Arrays in java",
        "content_html": "<p><b>QUESTION:</b><br>\n<b>Write a function that takes an array of integers as an argument and returns a value based on the sums of the even and odd numbers in the array. Let X = the sum of the odd numbers in the array and let Y = the sum of the even numbers. The function should return X-Y</b><br>\n<b>The signature of the function is</b>: int f(int [] a)</p>\n\n<p>Examples</p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n  <tr>\n    <th>if input array is</th>\n    <th>return</th>\n  </tr>\n</thead>\n  <tr>\n    <td>{1}</td>\n    <td>1</td>\n  </tr>\n  <tr>\n    <td>{1, 2}</td>\n    <td>-1</td>\n  </tr>\n <tr>\n    <td>{1, 2, 3}</td>\n    <td>2</td>\n  </tr>\n <tr>\n    <td>{1, 2, 3, 4}</td>\n    <td>-2</td>\n  </tr>\n <tr>\n    <td>{3, 3, 4, 4}</td>\n    <td>-2</td>\n  </tr>\n<tr>\n    <td>{3, 2, 3, 4}</td>\n    <td>0</td>\n  </tr>\n<tr>\n    <td>{4, 1, 2, 3}</td>\n    <td>-2</td>\n  </tr>\n<tr>\n    <td>{1, 1}</td>\n    <td>2</td>\n  </tr>\n<tr>\n    <td>{}</td>\n    <td>0</td>\n  </tr>\n</table></div>\n\n<p><b>ANSWER:</b><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight java\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.*</span><span class=\"o\">;</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ArraySum</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">f</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"no\">X</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>  <span class=\"c1\">// initialization for sum of odd numbers in an array</span>\n        <span class=\"kt\">int</span> <span class=\"no\">Y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"c1\">// initialization for sum of even numbers in an array</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"no\">X</span><span class=\"o\">+=</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"no\">Y</span><span class=\"o\">+=</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>   \n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"no\">X</span><span class=\"o\">-</span><span class=\"no\">Y</span><span class=\"o\">;</span>\n\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n        <span class=\"nc\">ArraySum</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArraySum</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">A</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">B</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">C</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">D</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">E</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">F</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">G</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">H</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">I</span> <span class=\"o\">=</span> <span class=\"o\">{};</span>\n\n        <span class=\"c1\">// Printing results on the screen</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array A \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">A</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">A</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array B \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">B</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">B</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array C \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">C</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">C</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array D \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">D</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">D</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array E \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">E</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">E</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array F \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">F</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">F</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array G \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">G</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">G</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array H \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">H</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">H</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array I \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">I</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">I</span><span class=\"o\">));</span>\n\n    <span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p><b>OUTPUT:</b><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Result for array A [1] is 1\nResult for array B [1, 2] is -1\nResult for array C [1, 2, 3] is 2\nResult for array D [1, 2, 3, 4] is -2\nResult for array E [3, 3, 4, 4] is -2\nResult for array F [3, 2, 3, 4] is 0\nResult for array G [4, 1, 2, 3] is -2\nResult for array H [1, 1] is 2\nResult for array I [] is 0\n\n</code></pre>\n\n</div>\n\n\n\n<p>That's one of examples in java arrays that can improve your reasoning, practice as many challenges as you can to better your programming skills. Thank you for taking time to read through this post.</p>",
        "summary": "<p><b>QUESTION:</b><br>\n<b>Write a function that takes an array of integers as an argument and returns a value based on the sums of the even and odd numbers in the array. Let X = the sum of the odd numbers in the array and let Y = the sum of the even numbers. The function should return X-Y</b><br>\n<b>The signature of the function is</b>: int f(int [] a)</p>\n\n<p>Examples</p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n  <tr>\n    <th>if input array is</th>\n    <th>return</th>\n  </tr>\n</thead>\n  <tr>\n    <td>{1}</td>\n    <td>1</td>\n  </tr>\n  <tr>\n    <td>{1, 2}</td>\n    <td>-1</td>\n  </tr>\n <tr>\n    <td>{1, 2, 3}</td>\n    <td>2</td>\n  </tr>\n <tr>\n    <td>{1, 2, 3, 4}</td>\n    <td>-2</td>\n  </tr>\n <tr>\n    <td>{3, 3, 4, 4}</td>\n    <td>-2</td>\n  </tr>\n<tr>\n    <td>{3, 2, 3, 4}</td>\n    <td>0</td>\n  </tr>\n<tr>\n    <td>{4, 1, 2, 3}</td>\n    <td>-2</td>\n  </tr>\n<tr>\n    <td>{1, 1}</td>\n    <td>2</td>\n  </tr>\n<tr>\n    <td>{}</td>\n    <td>0</td>\n  </tr>\n</table></div>\n\n<p><b>ANSWER:</b><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight java\"><code>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.*</span><span class=\"o\">;</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ArraySum</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">f</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"no\">X</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>  <span class=\"c1\">// initialization for sum of odd numbers in an array</span>\n        <span class=\"kt\">int</span> <span class=\"no\">Y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"c1\">// initialization for sum of even numbers in an array</span>\n        <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"no\">X</span><span class=\"o\">+=</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"no\">Y</span><span class=\"o\">+=</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>   \n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"no\">X</span><span class=\"o\">-</span><span class=\"no\">Y</span><span class=\"o\">;</span>\n\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n        <span class=\"nc\">ArraySum</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArraySum</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">A</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">B</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">C</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">D</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">E</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">F</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">G</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">H</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">};</span>\n        <span class=\"kt\">int</span> <span class=\"o\">[]</span> <span class=\"no\">I</span> <span class=\"o\">=</span> <span class=\"o\">{};</span>\n\n        <span class=\"c1\">// Printing results on the screen</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array A \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">A</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">A</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array B \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">B</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">B</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array C \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">C</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">C</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array D \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">D</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">D</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array E \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">E</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">E</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array F \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">F</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">F</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array G \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">G</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">G</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array H \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">H</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">H</span><span class=\"o\">));</span>\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Result for array I \"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"no\">I</span><span class=\"o\">)+</span><span class=\"s\">\" is \"</span><span class=\"o\">+</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"na\">f</span><span class=\"o\">(</span><span class=\"no\">I</span><span class=\"o\">));</span>\n\n    <span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p><b>OUTPUT:</b><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Result for array A [1] is 1\nResult for array B [1, 2] is -1\nResult for array C [1, 2, 3] is 2\nResult for array D [1, 2, 3, 4] is -2\nResult for array E [3, 3, 4, 4] is -2\nResult for array F [3, 2, 3, 4] is 0\nResult for array G [4, 1, 2, 3] is -2\nResult for array H [1, 1] is 2\nResult for array I [] is 0\n\n</code></pre>\n\n</div>\n\n\n\n<p>That's one of examples in java arrays that can improve your reasoning, practice as many challenges as you can to better your programming skills. Thank you for taking time to read through this post.</p>",
        "date_published": "2021-11-03T07:21:05.000Z",
        "author": {
          "name": "DALLINGTON ASINGWIRE"
        }
      },
      {
        "guid": "https://dev.to/baransel/flutter-listview-and-features-ifn",
        "url": "https://dev.to/baransel/flutter-listview-and-features-ifn",
        "title": "Flutter ListView and Features",
        "content_html": "<p>Hello, in this lesson we will cover Flutter <code>ListView</code> and Features, <code>Listview</code> comparison on Android. When creating <code>ListView</code> in Android, especially when creating lists with images, we needed extra model class, but when creating <code>ListView</code> in Flutter we don't need any model class. For this, it is quite simple to create a listview in flutter.</p>\n\n<p>First, let's examine a simple <code>ListView</code> structure consisting of only texts and make an example. </p>\n\n<h3>\n  <a href=\"#so-what-is-the-structure-we-call-listview\">\n  </a>\n  So what is the structure we call ListView?\n</h3>\n\n<p>We can think of <code>ListView</code> as lists with multiple elements. This list can be composed of only articles, or it can be created with mixed data. <code>ListView</code> takes children because it consists of multiple widgets.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListView</span><span class=\"o\">(</span>\n  <span class=\"nl\">children:</span> <span class=\"kd\">const</span> <span class=\"o\">[</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Flutter\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Courses\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n  <span class=\"o\">],</span>\n<span class=\"o\">)</span>\n</code></pre>\n\n</div>\n\n\n\n<p>We created each element inside the <code>ListView</code> widget, which we saw above, by adding the <code>ListTile</code> widget. Here, just using the title property as text, we get the following output.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png\" class=\"article-body-image-wrapper\"><img alt=\"Listview Example for Flutter\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png\" width=\"880\" height=\"694\"></a></p>\n\n<p>Of course, <code>ListTile</code>, which is one of the most used widgets in <code>ListView</code>, has other features.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile properties for Flutter\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png\" width=\"362\" height=\"488\"></a></p>\n\n<p>Just like we add a title, we can explain it by adding a subtitle with <code>subtitle</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListTile</span><span class=\"o\">(</span>\n  <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n  <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n<span class=\"o\">),</span>\n</code></pre>\n\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile subtitle\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png\" width=\"880\" height=\"832\"></a></p>\n\n<p>If we want, we can customize it further and place icons at the beginning or end of our articles.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListView</span><span class=\"o\">(</span>\n          <span class=\"nl\">children:</span> <span class=\"kd\">const</span> <span class=\"o\">[</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">leading:</span>\n                  <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">arrow_forward_ios_rounded</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the beginning</span>\n            <span class=\"o\">),</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Flutter\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">trailing:</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">auto_awesome</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the end</span>\n            <span class=\"o\">),</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Courses\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">trailing:</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">audiotrack</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the end</span>\n            <span class=\"o\">),</span>\n          <span class=\"o\">],</span>\n        <span class=\"o\">),</span>\n</code></pre>\n\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile Icon\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png\" width=\"880\" height=\"858\"></a></p>\n\n<p>Follow my blog for more <a href=\"https://baransel.dev/\">baransel.dev</a>.</p>",
        "summary": "<p>Hello, in this lesson we will cover Flutter <code>ListView</code> and Features, <code>Listview</code> comparison on Android. When creating <code>ListView</code> in Android, especially when creating lists with images, we needed extra model class, but when creating <code>ListView</code> in Flutter we don't need any model class. For this, it is quite simple to create a listview in flutter.</p>\n\n<p>First, let's examine a simple <code>ListView</code> structure consisting of only texts and make an example. </p>\n\n<h3>\n  <a href=\"#so-what-is-the-structure-we-call-listview\">\n  </a>\n  So what is the structure we call ListView?\n</h3>\n\n<p>We can think of <code>ListView</code> as lists with multiple elements. This list can be composed of only articles, or it can be created with mixed data. <code>ListView</code> takes children because it consists of multiple widgets.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListView</span><span class=\"o\">(</span>\n  <span class=\"nl\">children:</span> <span class=\"kd\">const</span> <span class=\"o\">[</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Flutter\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n    <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Courses\"</span><span class=\"o\">),</span>\n    <span class=\"o\">),</span>\n  <span class=\"o\">],</span>\n<span class=\"o\">)</span>\n</code></pre>\n\n</div>\n\n\n\n<p>We created each element inside the <code>ListView</code> widget, which we saw above, by adding the <code>ListTile</code> widget. Here, just using the title property as text, we get the following output.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png\" class=\"article-body-image-wrapper\"><img alt=\"Listview Example for Flutter\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mqyGwYkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-listview.png\" width=\"880\" height=\"694\"></a></p>\n\n<p>Of course, <code>ListTile</code>, which is one of the most used widgets in <code>ListView</code>, has other features.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile properties for Flutter\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bMi3W--E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-properties.png\" width=\"362\" height=\"488\"></a></p>\n\n<p>Just like we add a title, we can explain it by adding a subtitle with <code>subtitle</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListTile</span><span class=\"o\">(</span>\n  <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n  <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n<span class=\"o\">),</span>\n</code></pre>\n\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile subtitle\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yTlC8RUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-subtitle-ListTile.png\" width=\"880\" height=\"832\"></a></p>\n\n<p>If we want, we can customize it further and place icons at the beginning or end of our articles.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight dart\"><code><span class=\"n\">ListView</span><span class=\"o\">(</span>\n          <span class=\"nl\">children:</span> <span class=\"kd\">const</span> <span class=\"o\">[</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">leading:</span>\n                  <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">arrow_forward_ios_rounded</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the beginning</span>\n            <span class=\"o\">),</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Flutter\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">trailing:</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">auto_awesome</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the end</span>\n            <span class=\"o\">),</span>\n            <span class=\"n\">ListTile</span><span class=\"o\">(</span>\n              <span class=\"nl\">title:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"Courses\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">subtitle:</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"s\">\"https://baransel.dev\"</span><span class=\"o\">),</span>\n              <span class=\"nl\">trailing:</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">audiotrack</span><span class=\"o\">),</span> <span class=\"c1\">//icon in the end</span>\n            <span class=\"o\">),</span>\n          <span class=\"o\">],</span>\n        <span class=\"o\">),</span>\n</code></pre>\n\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png\" class=\"article-body-image-wrapper\"><img alt=\"ListTile Icon\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5TQNZAZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://baransel.dev/post/flutter-listview-features/flutter-ListTile-icon.png\" width=\"880\" height=\"858\"></a></p>\n\n<p>Follow my blog for more <a href=\"https://baransel.dev/\">baransel.dev</a>.</p>",
        "date_published": "2021-11-03T06:57:30.000Z",
        "author": {
          "name": "Baransel"
        }
      },
      {
        "guid": "https://dev.to/dailydevtips1/git-basics-what-is-git-2k7h",
        "url": "https://dev.to/dailydevtips1/git-basics-what-is-git-2k7h",
        "title": "Git basics: What is Git?",
        "content_html": "<p><strong>Statement:</strong> Git is the most powerful tool in modern development.</p>\n\n<p>It doesn't matter in what language you develop.<br>\nIf you work on any development, you need Git!</p>\n\n<p>Let's have a look at what Git even is and why it's so important.</p>\n\n<p>This is a series around Git, Git commands, GitHub, and more ❤️</p>\n<h2>\n  <a href=\"#what-is-git\">\n  </a>\n  What is Git?\n</h2>\n\n<p>Git is a free open source VCS (Version Control System), which means it's a way to keep track of every change in your software.</p>\n\n<p>There are more VCS in existence like CVS, SVN, and more. However, Git is by far the most used one.</p>\n\n<p>You can even use Git locally on your computer to keep track of changes you make throughout the code.<br>\nThis is a great way to maintain a good overview of certain things that break over time.</p>\n<h2>\n  <a href=\"#why-do-i-need-git\">\n  </a>\n  Why do I need Git?\n</h2>\n\n<p>But far more important is that it can be distributed, meaning you can host your Git repository on an external system like GitHub, GitLab, etc.</p>\n\n<p>When you do this, you can give other developers, colleagues, teammates the option to develop asynchronous with you and see the changes you have made.</p>\n\n<p>This makes Git a perfect system for developers to collaborate and work together on one codebase.</p>\n\n<p>Within this series, we'll also look at branching, merging, and all those fancy terms which make Git even more powerful!</p>\n<h2>\n  <a href=\"#a-git-use-case\">\n  </a>\n  A Git use case\n</h2>\n\n<p>To conclude the important, let's take a look at how things were before Git.</p>\n\n<p>Chris would have some large project he is maintaining. Then Paul also wanted to work on the system.</p>\n\n<p>Chris would have to put his system on an FTP, USB or transfer it via a link.</p>\n\n<p>Paul would then start working, but during this time, both Chris and Paul might have changed the same file, but in a slightly different way.</p>\n\n<p>By the time they are both done, the files will be shared back again, but which file is the right one now?<br>\nThere should be some combination, right!</p>\n\n<p>Well, that's a massive problem.</p>\n\n<p>With Git, this would have been prevented as Paul would have been able to get the codebase from a distributed Git provider, and Git would have kept track of all changes.</p>\n\n<p>When both would need to merge the code, Git would tell them which lines are conflicting.</p>\n\n<p>A lifesaver, thank you, Git!</p>\n<h2>\n  <a href=\"#how-to-install-git\">\n  </a>\n  How to install Git?\n</h2>\n\n<p>Git is super easy to install on any system. I've written down how to install Git for the following platforms:</p>\n\n<ul>\n<li>\n<strong>OSX</strong>: <code>brew install git</code>\n</li>\n<li>\n<strong>Windows</strong>: <a href=\"https://gitforwindows.org/\">Download the installer</a>\n</li>\n<li>\n<strong>Linux (apt)</strong>: <code>sudo apt-get install git</code>\n</li>\n<li>\n<strong>Linux (yum)</strong>: <code>sudo yum install git</code>\n</li>\n</ul>\n\n<p>Once you follow these steps, run the following command to check if Git is installed correctly:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>git <span class=\"nt\">--version</span>\n</code></pre>\n\n</div>\n\n\n\n<p>It should return a specific Git version like: <code>git version 2.33.0</code>.</p>\n\n<h2>\n  <a href=\"#summary\">\n  </a>\n  Summary\n</h2>\n\n<p>Git is a free and open-source way to keep track of your code changes.<br>\nGit is also a way for multiple developers to work on the same code base in an asynchronous manner.<br>\nGit can be used locally, but the real power lies in a managed solution like GitHub, GitLab, etc.</p>\n\n<p>I hope you learned the importance of Git. Keep an eye out for the next article in this series! 👀</p>\n\n<h3>\n  <a href=\"#thank-you-for-reading-and-lets-connect\">\n  </a>\n  Thank you for reading, and let's connect!\n</h3>\n\n<p>Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on <a href=\"https://www.facebook.com/DailyDevTipsBlog\">Facebook</a> or <a href=\"https://twitter.com/DailyDevTips1\">Twitter</a></p>",
        "summary": "<p><strong>Statement:</strong> Git is the most powerful tool in modern development.</p>\n\n<p>It doesn't matter in what language you develop.<br>\nIf you work on any development, you need Git!</p>\n\n<p>Let's have a look at what Git even is and why it's so important.</p>\n\n<p>This is a series around Git, Git commands, GitHub, and more ❤️</p>\n<h2>\n  <a href=\"#what-is-git\">\n  </a>\n  What is Git?\n</h2>\n\n<p>Git is a free open source VCS (Version Control System), which means it's a way to keep track of every change in your software.</p>\n\n<p>There are more VCS in existence like CVS, SVN, and more. However, Git is by far the most used one.</p>\n\n<p>You can even use Git locally on your computer to keep track of changes you make throughout the code.<br>\nThis is a great way to maintain a good overview of certain things that break over time.</p>\n<h2>\n  <a href=\"#why-do-i-need-git\">\n  </a>\n  Why do I need Git?\n</h2>\n\n<p>But far more important is that it can be distributed, meaning you can host your Git repository on an external system like GitHub, GitLab, etc.</p>\n\n<p>When you do this, you can give other developers, colleagues, teammates the option to develop asynchronous with you and see the changes you have made.</p>\n\n<p>This makes Git a perfect system for developers to collaborate and work together on one codebase.</p>\n\n<p>Within this series, we'll also look at branching, merging, and all those fancy terms which make Git even more powerful!</p>\n<h2>\n  <a href=\"#a-git-use-case\">\n  </a>\n  A Git use case\n</h2>\n\n<p>To conclude the important, let's take a look at how things were before Git.</p>\n\n<p>Chris would have some large project he is maintaining. Then Paul also wanted to work on the system.</p>\n\n<p>Chris would have to put his system on an FTP, USB or transfer it via a link.</p>\n\n<p>Paul would then start working, but during this time, both Chris and Paul might have changed the same file, but in a slightly different way.</p>\n\n<p>By the time they are both done, the files will be shared back again, but which file is the right one now?<br>\nThere should be some combination, right!</p>\n\n<p>Well, that's a massive problem.</p>\n\n<p>With Git, this would have been prevented as Paul would have been able to get the codebase from a distributed Git provider, and Git would have kept track of all changes.</p>\n\n<p>When both would need to merge the code, Git would tell them which lines are conflicting.</p>\n\n<p>A lifesaver, thank you, Git!</p>\n<h2>\n  <a href=\"#how-to-install-git\">\n  </a>\n  How to install Git?\n</h2>\n\n<p>Git is super easy to install on any system. I've written down how to install Git for the following platforms:</p>\n\n<ul>\n<li>\n<strong>OSX</strong>: <code>brew install git</code>\n</li>\n<li>\n<strong>Windows</strong>: <a href=\"https://gitforwindows.org/\">Download the installer</a>\n</li>\n<li>\n<strong>Linux (apt)</strong>: <code>sudo apt-get install git</code>\n</li>\n<li>\n<strong>Linux (yum)</strong>: <code>sudo yum install git</code>\n</li>\n</ul>\n\n<p>Once you follow these steps, run the following command to check if Git is installed correctly:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>git <span class=\"nt\">--version</span>\n</code></pre>\n\n</div>\n\n\n\n<p>It should return a specific Git version like: <code>git version 2.33.0</code>.</p>\n\n<h2>\n  <a href=\"#summary\">\n  </a>\n  Summary\n</h2>\n\n<p>Git is a free and open-source way to keep track of your code changes.<br>\nGit is also a way for multiple developers to work on the same code base in an asynchronous manner.<br>\nGit can be used locally, but the real power lies in a managed solution like GitHub, GitLab, etc.</p>\n\n<p>I hope you learned the importance of Git. Keep an eye out for the next article in this series! 👀</p>\n\n<h3>\n  <a href=\"#thank-you-for-reading-and-lets-connect\">\n  </a>\n  Thank you for reading, and let's connect!\n</h3>\n\n<p>Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on <a href=\"https://www.facebook.com/DailyDevTipsBlog\">Facebook</a> or <a href=\"https://twitter.com/DailyDevTips1\">Twitter</a></p>",
        "date_published": "2021-11-03T06:07:26.000Z",
        "author": {
          "name": "Chris Bongers"
        }
      },
      {
        "guid": "https://dev.to/w3webs/20-javascript-one-liners-that-will-help-you-code-like-a-pro-52b9",
        "url": "https://dev.to/w3webs/20-javascript-one-liners-that-will-help-you-code-like-a-pro-52b9",
        "title": "20 JavaScript One-Liners That Will Help You Code Like a Pro",
        "content_html": "<p> <span>JavaScript keeps growing and growing20 JavaScript One-Liners That Will Help You Code Like, opening doors for new “to be tech geeks” in the market as it’s one of the easiest languages to start. (is it really?)</span></p>\n<p>It’s true that JavaScript can do a lot of blazing things! and there is just so much to learn.</p>\n<p>And whether you’re new to JavaScript or more of a professional developer it’s always good to learn something new.</p>\n<p>I’m gonna go over some really helpful one-liners (20 + Bonus) that can help you boost your productivity and can help in debugging code. </p>\n<p>Read More: <b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/20-javascript-one-liners-that-will-help-you-code-like-a-pro/&amp;ved=2ahUKEwip-5yjmNPzAhXk_XMBHd2yDaMQFnoECAkQAQ&amp;usg=AOvVaw285TovlnD0Mc9Cm8Rcycp3\">20 JavaScript One-Liners That Will Help You Code Like a Pro</a></b></p>",
        "summary": "<p> <span>JavaScript keeps growing and growing20 JavaScript One-Liners That Will Help You Code Like, opening doors for new “to be tech geeks” in the market as it’s one of the easiest languages to start. (is it really?)</span></p>\n<p>It’s true that JavaScript can do a lot of blazing things! and there is just so much to learn.</p>\n<p>And whether you’re new to JavaScript or more of a professional developer it’s always good to learn something new.</p>\n<p>I’m gonna go over some really helpful one-liners (20 + Bonus) that can help you boost your productivity and can help in debugging code. </p>\n<p>Read More: <b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/20-javascript-one-liners-that-will-help-you-code-like-a-pro/&amp;ved=2ahUKEwip-5yjmNPzAhXk_XMBHd2yDaMQFnoECAkQAQ&amp;usg=AOvVaw285TovlnD0Mc9Cm8Rcycp3\">20 JavaScript One-Liners That Will Help You Code Like a Pro</a></b></p>",
        "date_published": "2021-11-03T06:02:47.000Z",
        "author": {
          "name": "W3School"
        }
      },
      {
        "guid": "https://dev.to/roselyne/what-is-the-difference-between-performance-testing-and-load-testing-2cl",
        "url": "https://dev.to/roselyne/what-is-the-difference-between-performance-testing-and-load-testing-2cl",
        "title": "What Is The Difference Between Performance Testing And Load Testing",
        "content_html": "<p>Performance testing and load testing are often used interchangeably but they are actually different parts of an overall test plan that should be executed in combination with each other.</p>\n\n<p><strong>Load testing</strong> is all about testing how your website or application can handle increased load – i.e number of requests per second/period of time.</p>\n\n<p><strong>Performance testing</strong>, on the other hand, seeks to measure performance under normal operating conditions on a single instance. For example page load time, response time, server response time, network latency and disk I/O. Load testing is a subset of performance testing.</p>\n\n<p>This is an important distinction as your application performance is measured by the user’s perception of how fast a page loads. If a user perceives a page takes too long to load, they might wait longer before making the next request. This would make your application appear slow(poor performance) even though it might be able to handle hundreds or thousands of requests per second(can handle high load).</p>\n\n<h2>\n  <a href=\"#performance-testing-techniques\">\n  </a>\n  Performance testing techniques\n</h2>\n\n<h3>\n  <a href=\"#1-load-testing\">\n  </a>\n  1) Load testing\n</h3>\n\n<p>This is a frequent part of a development process. Most web applications need to be tested for performance before they go live to the public.</p>\n\n<h3>\n  <a href=\"#2-soak-testing\">\n  </a>\n  2) Soak testing\n</h3>\n\n<p>This is similar to load testing, except that the test load is gradually increased over a period of time. This helps find performance issues such as memory leaks, which can be difficult to find with ordinary load testing.</p>\n\n<h3>\n  <a href=\"#3-stress-testing\">\n  </a>\n  3) Stress testing\n</h3>\n\n<p>Testing how an application behaves when it is pushed to or beyond its limits, such as how it behaves if too many users try to use it at one time.</p>\n\n<h3>\n  <a href=\"#4-scalability-testing\">\n  </a>\n  4) Scalability testing\n</h3>\n\n<p>How well an application or hardware can support more users or requests, or how it behaves when the number of users increases. For example, scalability testing is performed to determine if there are any bottlenecks in the system, such as memory usage.</p>\n\n<h3>\n  <a href=\"#5-microbenchmarking\">\n  </a>\n  5) Micro-benchmarking\n</h3>\n\n<p>Micro benchmarks are able to test a site as it would be seen by a single user. Micro-benchmarks capture the most important aspects of what will be seen by a typical user. The best sites are able to provide an optimal user experience for their users under all conditions. To perform micro-benchmarking, one needs to test the same tasks the site will experience in production using realistic workloads.</p>\n\n<h3>\n  <a href=\"#6-spike-testing\">\n  </a>\n  6) Spike testing\n</h3>\n\n<p>Spike testing is similar to load testing except that the test load is carried out only once by increasing the number of users suddenly.</p>\n\n<h2>\n  <a href=\"#what-determines-performance\">\n  </a>\n  What determines performance?\n</h2>\n\n<p>1) Network conditions<br>\n2) Server performance – host configurations, number of cores, memory, disk I/O<br>\n3) Database performance – database I/O, query execution times, is the data cached?<br>\n4) Thrid party access – API access to other services, caches, 3rd party content delivery networks<br>\n5) Client load – what happens when multiple clients are connected to your application?<br>\n6) Image rendering<br>\nSince you can’t test for all of these, you should carefully think about the performance risks and design tests to isolate them.</p>\n\n<h2>\n  <a href=\"#factors-to-consider-when-doing-load-tests\">\n  </a>\n  Factors to consider when doing load tests\n</h2>\n\n<p>Load tests seek to simulate load from a variety of different use cases including:</p>\n\n<ol>\n<li>Use a staging server with a fixed set of data</li>\n<li>Simulate a large number of users making requests in parallel so that your application will behave as expected under high load.</li>\n<li>Load tests are launched from a script use a variety of tools to simulate load.</li>\n<li>Will the Load tests be done manually or automatically.?</li>\n<li>Consider using a combination of load test and performance testing tools to determine how your application will behave under a range of load conditions</li>\n</ol>\n\n<h2>\n  <a href=\"#questions-to-ask-yourself-when-doing-performance-tests\">\n  </a>\n  Questions to ask yourself when doing performance tests\n</h2>\n\n<p>1) When is the page visible? After how long?<br>\n2) How quickly can users begin to interact with the page?<br>\n3) What is the server response time?<br>\n4) Could there be any latency issues on networks or with browser plug-ins?<br>\n5) Can users have a seamless experience across various devices?<br>\n6) How do performance metrics change when more third party content is loaded on the page?<br>\n7) How much scripting is there? Are they blocking the main thread<br>\n8) Is the site using CDN, is the website able to load resources on time?</p>\n\n<h2>\n  <a href=\"#example-performance-test-cases\">\n  </a>\n  Example Performance Test Cases\n</h2>\n\n<p>1) How many assets can a device download in parallel?<br>\n2) What is the minimum page size that a device can successfully load in a single request?<br>\n3) How does the page size and number of images affect load time?<br>\n4)How does CSS (stylesheets) and JS(javscript) affect performance of the page?<br>\n5) How much XMLHttpRequests (APIs calls, or usage of services) can be done simultaneously without blocking the UI thread.</p>\n\n<h2>\n  <a href=\"#most-common-performance-testing-issues\">\n  </a>\n  Most common Performance testing issues\n</h2>\n\n<p>1) Server response time is fine for some users but not others<br>\n2) Site or application works fine on a fast connection but slows down when on a mobile/slower connection<br>\n3) Increase of 3rd party content on a page causes performance issues as more connections are made to the server, more assets are loaded and requests queued up. The main thread becomes slow, which blocks other operations.</p>\n\n<h2>\n  <a href=\"#load-testing-tools\">\n  </a>\n  Load Testing tools\n</h2>\n\n<p>There are many different load testing tools available that allow you to test the performance of software applications. <br>\nSome are made specifically for users to perform load testing. Others are made for developers who want to test the performance of their own websites. </p>\n\n<p>A lot of companies now use load testing tools instead of manual tests as it is much more efficient, accurate and faster at finding issues with your application.</p>\n\n<h2>\n  <a href=\"#load-testing-scripts\">\n  </a>\n  Load testing scripts\n</h2>\n\n<p>There are many different types of load tests that can be carried out with the most common script types being:</p>\n\n<p><strong>1) Random</strong> – These will simply talk to your application as if it is a real user and randomly send requests at any time. This is known as “random” or “sporadic”.<br>\n<strong>2) Varying Load</strong> – This will gradually increase the number of users or requests over a duration of time. This tests your application under what is known as “steady-state conditions”.<br>\n<strong>3) Data-Driven</strong> – These will randomly send requests using the same data that would be sent to your application. Each time a request is made, the data will be repeated to create a realistic simulation of the normal use of your application.</p>\n\n<h2>\n  <a href=\"#common-performance-testing-and-load-testing-tools\">\n  </a>\n  Common performance testing and load testing tools\n</h2>\n\n<p>There are several different types of software performance testing tools available that allow you to test websites and applications. Some are made specifically for users to perform load testing. Others are made for developers who want to test the performance of their own sites. A lot of companies now use website performance testing tools instead of manual tests as it is much more efficient, accurate and faster at finding issues with your application.</p>\n\n<p><strong><em>1) JMeter</em></strong> – is a Java application that can be used to measure performance on a website. It is open-source and can be used to simulate a range of tasks, such as page refresh, database queries, user interactions and more. JMeter also allows you to create separate tests for different content within your site.<br>\n<strong><em>2) WebLoad</em></strong> – This is a tool that allows you to script load testing of website and it offers the ability to run scripts on a schedule or when thresholds are reached.<br>\n<strong><em>3) Loadrunner</em></strong> – is a product designed for performance testing websites. It allows you to test multiple websites in the same environment, which allows you to compare results.<br>\n<strong><em>4) LoadNinja</em></strong> – is a free tool that includes an editor, recorder, test script compiler and automatic report generator. It allows you to run load tests via the command line.<br>\n<strong><em>6) Sauce Labs</em></strong> – Allows you to automatically run load tests on real devices.<br>\n<strong><em>5) Loader</em></strong> – is a JavaScript library that provides tools for loading websites. It can be used to simulate different network conditions, repeat requests or introduce latency into requests.</p>",
        "summary": "<p>Performance testing and load testing are often used interchangeably but they are actually different parts of an overall test plan that should be executed in combination with each other.</p>\n\n<p><strong>Load testing</strong> is all about testing how your website or application can handle increased load – i.e number of requests per second/period of time.</p>\n\n<p><strong>Performance testing</strong>, on the other hand, seeks to measure performance under normal operating conditions on a single instance. For example page load time, response time, server response time, network latency and disk I/O. Load testing is a subset of performance testing.</p>\n\n<p>This is an important distinction as your application performance is measured by the user’s perception of how fast a page loads. If a user perceives a page takes too long to load, they might wait longer before making the next request. This would make your application appear slow(poor performance) even though it might be able to handle hundreds or thousands of requests per second(can handle high load).</p>\n\n<h2>\n  <a href=\"#performance-testing-techniques\">\n  </a>\n  Performance testing techniques\n</h2>\n\n<h3>\n  <a href=\"#1-load-testing\">\n  </a>\n  1) Load testing\n</h3>\n\n<p>This is a frequent part of a development process. Most web applications need to be tested for performance before they go live to the public.</p>\n\n<h3>\n  <a href=\"#2-soak-testing\">\n  </a>\n  2) Soak testing\n</h3>\n\n<p>This is similar to load testing, except that the test load is gradually increased over a period of time. This helps find performance issues such as memory leaks, which can be difficult to find with ordinary load testing.</p>\n\n<h3>\n  <a href=\"#3-stress-testing\">\n  </a>\n  3) Stress testing\n</h3>\n\n<p>Testing how an application behaves when it is pushed to or beyond its limits, such as how it behaves if too many users try to use it at one time.</p>\n\n<h3>\n  <a href=\"#4-scalability-testing\">\n  </a>\n  4) Scalability testing\n</h3>\n\n<p>How well an application or hardware can support more users or requests, or how it behaves when the number of users increases. For example, scalability testing is performed to determine if there are any bottlenecks in the system, such as memory usage.</p>\n\n<h3>\n  <a href=\"#5-microbenchmarking\">\n  </a>\n  5) Micro-benchmarking\n</h3>\n\n<p>Micro benchmarks are able to test a site as it would be seen by a single user. Micro-benchmarks capture the most important aspects of what will be seen by a typical user. The best sites are able to provide an optimal user experience for their users under all conditions. To perform micro-benchmarking, one needs to test the same tasks the site will experience in production using realistic workloads.</p>\n\n<h3>\n  <a href=\"#6-spike-testing\">\n  </a>\n  6) Spike testing\n</h3>\n\n<p>Spike testing is similar to load testing except that the test load is carried out only once by increasing the number of users suddenly.</p>\n\n<h2>\n  <a href=\"#what-determines-performance\">\n  </a>\n  What determines performance?\n</h2>\n\n<p>1) Network conditions<br>\n2) Server performance – host configurations, number of cores, memory, disk I/O<br>\n3) Database performance – database I/O, query execution times, is the data cached?<br>\n4) Thrid party access – API access to other services, caches, 3rd party content delivery networks<br>\n5) Client load – what happens when multiple clients are connected to your application?<br>\n6) Image rendering<br>\nSince you can’t test for all of these, you should carefully think about the performance risks and design tests to isolate them.</p>\n\n<h2>\n  <a href=\"#factors-to-consider-when-doing-load-tests\">\n  </a>\n  Factors to consider when doing load tests\n</h2>\n\n<p>Load tests seek to simulate load from a variety of different use cases including:</p>\n\n<ol>\n<li>Use a staging server with a fixed set of data</li>\n<li>Simulate a large number of users making requests in parallel so that your application will behave as expected under high load.</li>\n<li>Load tests are launched from a script use a variety of tools to simulate load.</li>\n<li>Will the Load tests be done manually or automatically.?</li>\n<li>Consider using a combination of load test and performance testing tools to determine how your application will behave under a range of load conditions</li>\n</ol>\n\n<h2>\n  <a href=\"#questions-to-ask-yourself-when-doing-performance-tests\">\n  </a>\n  Questions to ask yourself when doing performance tests\n</h2>\n\n<p>1) When is the page visible? After how long?<br>\n2) How quickly can users begin to interact with the page?<br>\n3) What is the server response time?<br>\n4) Could there be any latency issues on networks or with browser plug-ins?<br>\n5) Can users have a seamless experience across various devices?<br>\n6) How do performance metrics change when more third party content is loaded on the page?<br>\n7) How much scripting is there? Are they blocking the main thread<br>\n8) Is the site using CDN, is the website able to load resources on time?</p>\n\n<h2>\n  <a href=\"#example-performance-test-cases\">\n  </a>\n  Example Performance Test Cases\n</h2>\n\n<p>1) How many assets can a device download in parallel?<br>\n2) What is the minimum page size that a device can successfully load in a single request?<br>\n3) How does the page size and number of images affect load time?<br>\n4)How does CSS (stylesheets) and JS(javscript) affect performance of the page?<br>\n5) How much XMLHttpRequests (APIs calls, or usage of services) can be done simultaneously without blocking the UI thread.</p>\n\n<h2>\n  <a href=\"#most-common-performance-testing-issues\">\n  </a>\n  Most common Performance testing issues\n</h2>\n\n<p>1) Server response time is fine for some users but not others<br>\n2) Site or application works fine on a fast connection but slows down when on a mobile/slower connection<br>\n3) Increase of 3rd party content on a page causes performance issues as more connections are made to the server, more assets are loaded and requests queued up. The main thread becomes slow, which blocks other operations.</p>\n\n<h2>\n  <a href=\"#load-testing-tools\">\n  </a>\n  Load Testing tools\n</h2>\n\n<p>There are many different load testing tools available that allow you to test the performance of software applications. <br>\nSome are made specifically for users to perform load testing. Others are made for developers who want to test the performance of their own websites. </p>\n\n<p>A lot of companies now use load testing tools instead of manual tests as it is much more efficient, accurate and faster at finding issues with your application.</p>\n\n<h2>\n  <a href=\"#load-testing-scripts\">\n  </a>\n  Load testing scripts\n</h2>\n\n<p>There are many different types of load tests that can be carried out with the most common script types being:</p>\n\n<p><strong>1) Random</strong> – These will simply talk to your application as if it is a real user and randomly send requests at any time. This is known as “random” or “sporadic”.<br>\n<strong>2) Varying Load</strong> – This will gradually increase the number of users or requests over a duration of time. This tests your application under what is known as “steady-state conditions”.<br>\n<strong>3) Data-Driven</strong> – These will randomly send requests using the same data that would be sent to your application. Each time a request is made, the data will be repeated to create a realistic simulation of the normal use of your application.</p>\n\n<h2>\n  <a href=\"#common-performance-testing-and-load-testing-tools\">\n  </a>\n  Common performance testing and load testing tools\n</h2>\n\n<p>There are several different types of software performance testing tools available that allow you to test websites and applications. Some are made specifically for users to perform load testing. Others are made for developers who want to test the performance of their own sites. A lot of companies now use website performance testing tools instead of manual tests as it is much more efficient, accurate and faster at finding issues with your application.</p>\n\n<p><strong><em>1) JMeter</em></strong> – is a Java application that can be used to measure performance on a website. It is open-source and can be used to simulate a range of tasks, such as page refresh, database queries, user interactions and more. JMeter also allows you to create separate tests for different content within your site.<br>\n<strong><em>2) WebLoad</em></strong> – This is a tool that allows you to script load testing of website and it offers the ability to run scripts on a schedule or when thresholds are reached.<br>\n<strong><em>3) Loadrunner</em></strong> – is a product designed for performance testing websites. It allows you to test multiple websites in the same environment, which allows you to compare results.<br>\n<strong><em>4) LoadNinja</em></strong> – is a free tool that includes an editor, recorder, test script compiler and automatic report generator. It allows you to run load tests via the command line.<br>\n<strong><em>6) Sauce Labs</em></strong> – Allows you to automatically run load tests on real devices.<br>\n<strong><em>5) Loader</em></strong> – is a JavaScript library that provides tools for loading websites. It can be used to simulate different network conditions, repeat requests or introduce latency into requests.</p>",
        "date_published": "2021-11-03T06:00:06.000Z",
        "author": {
          "name": "Roselyne"
        }
      },
      {
        "guid": "https://dev.to/aidenybai/composable-by-design-sensible-by-default-2nij",
        "url": "https://dev.to/aidenybai/composable-by-design-sensible-by-default-2nij",
        "title": "Composable by design, sensible by default",
        "content_html": "<blockquote>\n<p><em>Plug: I help develop <a href=\"https://github.com/millionjs/million\"><code>million</code></a>: &lt;1kb virtual DOM - it's fast!</em></p>\n</blockquote>\n\n<h2>\n  <a href=\"#introduction\">\n  </a>\n  Introduction\n</h2>\n\n<p>Lately, there's been a paradigm shift in API design in the JavaScript Framework ecosystem. For instance, <a href=\"https://v3.vuejs.org/\">Vue 3</a> has released the new <a href=\"https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api\">Composition API</a> alongside the existing  <a href=\"https://v3.vuejs.org/guide/typescript-support.html#using-with-options-api\">Options API</a>, allowing for creation of significantly more reusable code and greater customization by the developer.</p>\n\n<p>This is in contrast to the previous API in Vue 2. Although it provided functionality to a degree, it is fundamentally a black box and when greater complexities arise, plugins or escape hatches must be utilized to solve these issues. This can result in subpar code quality, performance, and maintainability.</p>\n\n<h2>\n  <a href=\"#composability-by-design\">\n  </a>\n  Composability by design\n</h2>\n\n<p>Composability is awesome, but what exactly is composability? </p>\n\n<p>Instead of a boring definition, let's illustrate with a graphic:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QcHLnSb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydptmitd23exvmdw0sri.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QcHLnSb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydptmitd23exvmdw0sri.png\" width=\"610\" height=\"403\"></a><br>Lego pyramid made of Lego blocks\n  </p>\n\n<p>We can imagine Legos as components of our API -- we can use those legos to build complex logic. If we want to change the color or length of the pyramid, we can swap out legos for legos of our desired attributes. When applied to APIs, we can    use components to compose more complex logic, and we can swap out components to change the logic.</p>\n\n<p>For example, with <a href=\"https://github.com/aidenybai/million\">Million</a>, logic is composed with <a href=\"https://million.js.org/functions/patch#custom-patch-functions\">drivers</a>, which are functions that enable nested composition. This is especially useful for libraries that are made to create other libraries, as it allows for greater extensibility and complex functionality. </p>\n\n<h2>\n  <a href=\"#sensible-by-default\">\n  </a>\n  Sensible by default\n</h2>\n\n<p>While having a super composable API is great, it can be too much effort just to get some simple functionality working. That's why we need to offer a sensible API by default. A sensible API is one which covers the general case and uses best practices, and is dead simple to use. </p>",
        "summary": "<blockquote>\n<p><em>Plug: I help develop <a href=\"https://github.com/millionjs/million\"><code>million</code></a>: &lt;1kb virtual DOM - it's fast!</em></p>\n</blockquote>\n\n<h2>\n  <a href=\"#introduction\">\n  </a>\n  Introduction\n</h2>\n\n<p>Lately, there's been a paradigm shift in API design in the JavaScript Framework ecosystem. For instance, <a href=\"https://v3.vuejs.org/\">Vue 3</a> has released the new <a href=\"https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api\">Composition API</a> alongside the existing  <a href=\"https://v3.vuejs.org/guide/typescript-support.html#using-with-options-api\">Options API</a>, allowing for creation of significantly more reusable code and greater customization by the developer.</p>\n\n<p>This is in contrast to the previous API in Vue 2. Although it provided functionality to a degree, it is fundamentally a black box and when greater complexities arise, plugins or escape hatches must be utilized to solve these issues. This can result in subpar code quality, performance, and maintainability.</p>\n\n<h2>\n  <a href=\"#composability-by-design\">\n  </a>\n  Composability by design\n</h2>\n\n<p>Composability is awesome, but what exactly is composability? </p>\n\n<p>Instead of a boring definition, let's illustrate with a graphic:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QcHLnSb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydptmitd23exvmdw0sri.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QcHLnSb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydptmitd23exvmdw0sri.png\" width=\"610\" height=\"403\"></a><br>Lego pyramid made of Lego blocks\n  </p>\n\n<p>We can imagine Legos as components of our API -- we can use those legos to build complex logic. If we want to change the color or length of the pyramid, we can swap out legos for legos of our desired attributes. When applied to APIs, we can    use components to compose more complex logic, and we can swap out components to change the logic.</p>\n\n<p>For example, with <a href=\"https://github.com/aidenybai/million\">Million</a>, logic is composed with <a href=\"https://million.js.org/functions/patch#custom-patch-functions\">drivers</a>, which are functions that enable nested composition. This is especially useful for libraries that are made to create other libraries, as it allows for greater extensibility and complex functionality. </p>\n\n<h2>\n  <a href=\"#sensible-by-default\">\n  </a>\n  Sensible by default\n</h2>\n\n<p>While having a super composable API is great, it can be too much effort just to get some simple functionality working. That's why we need to offer a sensible API by default. A sensible API is one which covers the general case and uses best practices, and is dead simple to use. </p>",
        "date_published": "2021-11-03T05:58:35.000Z",
        "author": {
          "name": "Aiden Bai"
        }
      },
      {
        "guid": "https://dev.to/j12y/matrix-routing-with-reactjs-to-optimize-a-shopping-plan-1bn3",
        "url": "https://dev.to/j12y/matrix-routing-with-reactjs-to-optimize-a-shopping-plan-1bn3",
        "title": "Matrix Routing with ReactJS to Optimize a Shopping Plan",
        "content_html": "<p>The annual tradition known as Black Friday leads many to go shopping at retail stores. Getting a route from your current location to another is a straight-forward navigation tool we’ve used many times. If we have multiple stops, how do we plan the most optimal route between them? That’s a job for Matrix Routing.</p>\n\n<h1>\n  <a href=\"#project\">\n  </a>\n  Project\n</h1>\n\n<p><em>Morpheus: Unfortunately, no one can be told what the Matrix is. You have to see it for yourself.</em></p>\n\n<p>For this project, we’ll demonstrate using the HERE <a href=\"https://developer.here.com/documentation#places\">Places</a> and <a href=\"https://developer.here.com/documentation#routing\">Routing</a> APIs with ReactJS to plan a series of stops.</p>\n\n<p>If you need to go to multiple stores such as Walmart, H-E-B, Gamestop and Kohl’s it may not matter which location or order you need to make the stops. To make the best use of your time as seen in the following screen capture, we can search for these stores and see the closest option highlighted in green when taking driving times and traffic into account. As we select a waypoint, the next closest store is highlighted from the remaining groups.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q2bg7xJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn2.hubspot.net/hubfs/2174253/matrix-routing.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q2bg7xJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn2.hubspot.net/hubfs/2174253/matrix-routing.gif\" alt=\"matrix demo\" width=\"880\" height=\"717\"></a></p>\n\n<p>Selecting multiple waypoints leads to an optimized shopping plan. As you build applications, taking into account where somebody is and where they are going can provide a much richer user experience by considering the context of location.</p>\n\n<h1>\n  <a href=\"#getting-started\">\n  </a>\n  Getting Started\n</h1>\n\n<p>As with other ReactJS tutorials, we’ll start with <code>create-react-app</code> as a project structure.</p>\n\n<p>We’ll use a few other libraries as well, <strong>axios</strong> for making HTTP requests, <strong>react-bootstrap</strong> for ready-made react components of the Bootstrap library, and <strong>styled-components</strong> because what I’ve always felt like I was missing in my life was the ability to set CSS properties more easily in JavaScript (🖤 web development).</p>\n\n<p>Here are the commands to create the app, install the dependencies, and then start the development web server:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>create-react-bootstrap app\ncd app\nnpm install --save styled-components axios react-bootstrap\nnpm start\n</code></pre>\n\n</div>\n\n\n\n<ul>\n<li><a href=\"https://github.com/facebook/create-react-app\">https://github.com/facebook/create-react-app</a></li>\n<li><a href=\"https://react-bootstrap.github.io/\">https://react-bootstrap.github.io/</a></li>\n<li><a href=\"https://www.styled-components.com/\">https://www.styled-components.com/</a></li>\n</ul>\n\n<h1>\n  <a href=\"#components\">\n  </a>\n  Components\n</h1>\n\n<p>We will develop a few React components that encapsulate the view and behavior of our user interface.</p>\n\n<ul>\n<li><p><strong>StartLocation.js</strong> is a component that will display a form for describing the starting location. We can change the latitude and longitude in the form or click on the globe icon to use our current location.</p></li>\n<li><p><strong>PlaceSearch.js</strong> is a component that displays a form to search for places near our starting location. The results are displayed in a list by distance so that the user can select one.</p></li>\n<li><p><strong>PlacePlanner.js</strong> is a component that is used for planning a route across multiple place searches. It uses the Matrix Routing algorithm to find the next nearest waypoint.</p></li>\n<li><p><strong>App.js</strong> is a component to wrap up everything into an application that includes the <em>StartLocation</em> and <em>PlacePlanner</em>.</p></li>\n</ul>\n\n<h1>\n  <a href=\"#app\">\n  </a>\n  App\n</h1>\n\n<p>Starting from the top most component, we define our App which is composed from the <em>StartLocation</em> and <em>PlacePlanner</em> components. We maintain the geocordinates of our origin as state in the App so that when it is changed by the StartLocation component we can keep things consistent in the PlacePlanner by passing them down as properties. You can see the view being defined by the render method:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">App</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">StartLocation</span>\n            <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">MyLocator</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocationChanged</span><span class=\"p\">}</span>\n            <span class=\"nx\">onLocate</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocate</span><span class=\"p\">}</span>\n            <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Wrapper</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;</span><span class=\"nx\">Search</span> <span class=\"k\">for</span> <span class=\"nx\">nearby</span> <span class=\"nx\">places</span><span class=\"p\">.</span><span class=\"o\">&lt;</span><span class=\"sr\">/p</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">PlacePlanner</span>\n            <span class=\"nx\">app_id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">here</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">}</span>\n            <span class=\"nx\">app_code</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">here</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">}</span>\n            <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Wrapper</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>    <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>onLocationChanged()</code> method passed to the <em>StartLocation</em> component is used for any changes made to the text forms.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onLocationChanged</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">state</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">;</span>\n    <span class=\"nx\">state</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">start</span><span class=\"dl\">'</span><span class=\"p\">][</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>onLocate()</code> method is there for handling HTML5 geolocation API to use the current location detected by the browser.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onLocate</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\n      <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n      <span class=\"nb\">navigator</span><span class=\"p\">.</span><span class=\"nx\">geolocation</span><span class=\"p\">.</span><span class=\"nx\">getCurrentPosition</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">position</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span>\n          <span class=\"na\">start</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">lat</span><span class=\"p\">:</span> <span class=\"nx\">position</span><span class=\"p\">.</span><span class=\"nx\">coords</span><span class=\"p\">.</span><span class=\"nx\">latitude</span><span class=\"p\">,</span>\n            <span class=\"na\">lng</span><span class=\"p\">:</span> <span class=\"nx\">position</span><span class=\"p\">.</span><span class=\"nx\">coords</span><span class=\"p\">.</span><span class=\"nx\">longitude</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">});</span>\n      <span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<h1>\n  <a href=\"#startlocation\">\n  </a>\n  StartLocation\n</h1>\n\n<p>The <em>StartLocation</em> is not much more than a simple Bootstrap form for collecting user input since the behaviors are passed in as properties.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">Wrapper</span><span class=\"o\">&gt;</span>\n\n      <span class=\"o\">&lt;</span><span class=\"nx\">Grid</span><span class=\"o\">&gt;</span>\n\n        <span class=\"o\">&lt;</span><span class=\"nx\">Row</span><span class=\"o\">&gt;</span>\n\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">ControlLabel</span><span class=\"o\">&gt;</span><span class=\"nx\">Latitude</span><span class=\"o\">&lt;</span><span class=\"sr\">/ControlLabel</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n            <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lat</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lat</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">ControlLabel</span><span class=\"o\">&gt;</span><span class=\"nx\">Longitude</span><span class=\"o\">&lt;</span><span class=\"sr\">/ControlLabel</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n            <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lng</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lng</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">br</span><span class=\"o\">/&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">Button</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocate</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">Glyphicon</span> <span class=\"nx\">glyph</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">globe</span><span class=\"dl\">\"</span><span class=\"o\">/&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"sr\">/Button</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Row</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Row</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span><span class=\"p\">.</span><span class=\"nx\">Feedback</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Row</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Grid</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/Wrapper</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>In order to render the <code>Glyphicon</code> you will need to update the <strong>public/index.html</strong> to pull in the bootstrap css from a CDN. The addition of the <code>&lt;Wrapper&gt;</code> was just a simple styled-component for additional presentation customization.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"kd\">const</span> <span class=\"nx\">Wrapper</span> <span class=\"o\">=</span> <span class=\"nx\">styled</span><span class=\"p\">.</span><span class=\"nx\">section</span><span class=\"s2\">`\n  padding: 1em;\n  background: papayawhip;\n`</span><span class=\"p\">;</span>\n</code></pre>\n\n</div>\n\n\n\n<h1>\n  <a href=\"#placesearch\">\n  </a>\n  PlaceSearch\n</h1>\n\n<p>We’re going to skip over the <em>PlacePlanner</em> component for a moment to take a closer look at the <em>PlaceSearch</em> component first. In this component we start making use of the HERE Location services to search for places.</p>\n\n<p>Digging into the <code>render()</code> method, we need a form that allows us to enter a search query. The <code>onChange()</code> and <code>onKeyPress()</code> are typical behavior of form entry so that state is maintained and the user can either click the search button or press <code>return</code> to trigger a places search.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">FormGroup</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">InputGroup</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n          <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">destination</span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">}</span>\n          <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">destination</span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">}</span>\n          <span class=\"nx\">placeholder</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">Store Name</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"nx\">onKeyPress</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"nx\">e</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">key</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">Enter</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onSearch</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span> <span class=\"p\">}}}</span>\n        <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"nx\">InputGroup</span><span class=\"p\">.</span><span class=\"nx\">Addon</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">Glyphicon</span> <span class=\"nx\">glyph</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">search</span><span class=\"dl\">\"</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onSearch</span> <span class=\"p\">}</span> <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/InputGroup.Addon</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/InputGroup&gt;&lt;/</span><span class=\"nx\">FormGroup</span><span class=\"o\">&gt;</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>Additionally in the <code>render()</code> method we are displaying the search results but we’ll come back to that. The Places API can be used for finding specific places with a text string. Unlike with the HERE Geocoder, this is not matching by address but by the name of a place and returning a set of results. You can use the HERE Maps API for JS which includes functions for displaying places. You’d use the same trick of <code>window.H</code> as described in the tutorial on how to Use HERE Interactive Maps with ReactJS to make it work. Since this project isn’t displaying a map and is just a simple GET request, I am using <strong>axios</strong>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onSearch</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n        <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span>\n          <span class=\"dl\">'</span><span class=\"s1\">https://places.api.here.com/places/v1/discover/search</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n          <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">params</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_id</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_code</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">q</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">q</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">size</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">at</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span>\n          <span class=\"p\">}}).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"na\">results</span><span class=\"p\">:</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">items</span><span class=\"p\">});</span>\n            <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">items</span><span class=\"p\">,</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">);</span>\n          <span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>A few notes about the parameters. You need the <em>app_id</em> and <em>app_code</em> typically used with any HERE developer account. The text query is given by the q parameter. I’ve limited the size to the 10 closest matches based on distance and given the at as the location from which to do a proximity search.</p>\n\n<p>Once the results are fetched from the request, we call <code>setState</code> which triggers the component to re-render as part of the typical React lifecycle. The rest of the render() method will use these results to display the search result listings.</p>\n\n<p>We have a helper method called <code>decodeVicinity()</code> to help process our Places response. The attribute typically has a HTML <code>&lt;br/&gt;</code> element which we don’t want so can strip it out.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"kd\">const</span> <span class=\"nx\">decodeVicinity</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">raw</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">e</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">div</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">raw</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">childNodes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">nodeValue</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>In our <code>render()</code> implementation we also loop over the results to make a list of items. Each item represents a place from our search in a list. In addition to simply listing all the matches there are two cases to handle. First, if the user has made a selection the <strong>className</strong> can be set to active which will cause it to be highlighted by Boostrap. Second, if the item is the next closest destination we will color it green by using the <strong>bsStyle</strong> attribute and setting it to <em>success</em>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"c1\">// Build up listing of locations that match query</span>\n<span class=\"kd\">let</span> <span class=\"nx\">destinations</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">option</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">ListGroupItem</span>\n          <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span>\n          <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span>\n          <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">onSelect</span><span class=\"p\">}</span>\n          <span class=\"nx\">header</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span>\n          <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">selected</span> <span class=\"o\">===</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">?</span> <span class=\"dl\">\"</span><span class=\"s2\">active</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">}</span>\n          <span class=\"nx\">bsStyle</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">nearest</span> <span class=\"o\">===</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">?</span> <span class=\"dl\">\"</span><span class=\"s2\">success</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">info</span><span class=\"dl\">\"</span> <span class=\"p\">}</span>\n          <span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">Fragment</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"nx\">decodeVicinity</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">vicinity</span><span class=\"p\">)}</span><span class=\"o\">&lt;</span><span class=\"sr\">/Fragment</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/ListGroupItem</span><span class=\"err\">&gt;\n</span>    <span class=\"p\">);</span>\n    <span class=\"nx\">destinations</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">option</span><span class=\"p\">);</span>\n    <span class=\"c1\">// ({item.position[0]}, {item.position[1]})</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>These items are then simply included in a <code>&lt;ListGroup&gt;</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">ListGroup</span><span class=\"o\">&gt;</span>\n  <span class=\"p\">{</span> <span class=\"nx\">destinations</span> <span class=\"p\">}</span>\n<span class=\"o\">&lt;</span><span class=\"sr\">/ListGroup</span><span class=\"err\">&gt;\n</span></code></pre>\n\n</div>\n\n\n\n<p>When a user selects one of the destinations, in addition to highlighting it making it <em>active</em> there is some behavior. By making a selection of a waypoint, this should trigger a new search for the next closest destination among remaining groups.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onSelect</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"dl\">'</span><span class=\"s1\">selected</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">currentTarget</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">});</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">findNearest</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>findNearest()</code> method is defined in the <em>PlacePlanner</em> component and passed down as a property so we’ll look at that component next.</p>\n\n<h1>\n  <a href=\"#placeplanner\">\n  </a>\n  PlacePlanner\n</h1>\n\n<p>The <em>PlacePlanner</em> component handles the optimization of our path by using the Matrix Routing algorithm across multiple places.</p>\n\n<p>The <code>render()</code> method makes use of our reusable <code>&lt;PlaceSearch/&gt;</code> component. A few properties are passed down for its behaviors as well as the methods defined in this component for identifying the next nearest destination and maintaining state of which places have been selected. The full definition of this method can be found in the full source code listing from the github repository.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">PlaceSearch</span>\n        <span class=\"nx\">idx</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">}</span>\n        <span class=\"nx\">app_id</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_id</span> <span class=\"p\">}</span>\n        <span class=\"nx\">app_code</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_code</span> <span class=\"p\">}</span>\n        <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n        <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n        <span class=\"nx\">nearest</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">}</span>\n        <span class=\"nx\">addPlaces</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">addPlaces</span> <span class=\"p\">}</span>\n        <span class=\"nx\">findNearest</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">findNearest</span> <span class=\"p\">}</span>\n        <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span></code></pre>\n\n</div>\n\n\n\n<p>The <code>addPlaces()</code> method is called from the <em>PlaceSearch</em> component to maintain a list of all potential destinations. That is, from our starting location by searching for “Walmart” we found 10 possible locations of Walmart we could go to. As we search for “H-E-B” we identify 10 more possible locations for a total of 20 different options to choose from. The selected state is being maintained because once we’ve identified a single Walmart to go to, we limit our list of remaining options to the 10 H-E-B locations. That’s what the following snippet demonstrates.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">results</span><span class=\"p\">,</span> <span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nx\">lng</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"c1\">// Update places with new search results</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">places</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">places</span><span class=\"p\">;</span>\n        <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">results</span><span class=\"p\">;</span>\n\n        <span class=\"c1\">// Combine all results across searched places where a selection has</span>\n        <span class=\"c1\">// not yet been made as our options for the next destination</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">p</span> <span class=\"k\">in</span> <span class=\"nx\">places</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">selected</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">]</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">undefined</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">o</span> <span class=\"k\">in</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n                    <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">({</span>\n                        <span class=\"na\">lat</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"na\">lng</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                        <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">,</span>\n                    <span class=\"p\">});</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// If there are no more options then we are done searching</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">===</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// To be continued</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>Given a list of 40 potential options, how do I get started? The HERE Routing API supports Requesting a Matrix of Routes. This means that given N starting locations and M destination locations we can query the cost factor of going to each as a matrix. The cost factor is a representation in our case of the time it would take by driving in traffic to get to a given location. From the destination with the lowest cost factor, we can make a recommendation for the optimized path across multiple places. Once at that next destination, we can further compute from the remaining options the next best location to route to.</p>\n\n<p>In our case, we are looking at a 1:M query as demonstrated in the next snippet:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">results</span><span class=\"p\">,</span> <span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nx\">lng</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"p\">...</span>\n        <span class=\"c1\">// continuing from above</span>\n\n\n        <span class=\"c1\">// Will build parameters including all of the potential destinations</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_id</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_code</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">fastest;car;traffic:enabled</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">matrixAttributes</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">ix,su</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">summaryattributes</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">all</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">start0</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">lng</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">destination</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">lng</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// Calculate matrix routing among options to make a recommendation</span>\n        <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n        <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span>\n            <span class=\"dl\">'</span><span class=\"s1\">https://matrix.route.api.here.com/routing/7.2/calculatematrix.json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">params</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">params</span><span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"kd\">const</span> <span class=\"nx\">matrix</span> <span class=\"o\">=</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">matrixEntry</span><span class=\"p\">;</span>\n\n                <span class=\"kd\">let</span> <span class=\"nx\">nearest</span> <span class=\"o\">=</span> <span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">;</span>\n                <span class=\"nx\">nearest</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">id</span><span class=\"dl\">'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">matrix</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">.</span><span class=\"nx\">costFactor</span> <span class=\"o\">&lt;</span> <span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">costFactor</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"nx\">nearest</span> <span class=\"o\">=</span> <span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">;</span>\n                        <span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n                <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span>\n                    <span class=\"na\">nearest</span><span class=\"p\">:</span> <span class=\"nx\">nearest</span>\n                <span class=\"p\">})</span>\n            <span class=\"p\">});</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"na\">places</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>We are using the location id from our options so that the property can be used in our PlaceSearch component for highlighting.</p>\n\n<h1>\n  <a href=\"#summary\">\n  </a>\n  Summary\n</h1>\n\n<p><em>Neo: I’m going to show them a world without you. A world without rules and controls, without borders or boundaries. A world where anything is possible. Where we go from there is a choice I leave to you.</em></p>\n\n<p>This is not a ready-made production application but hopefully gives you a flavor of how and why to start using some of the HERE Location Services like Places and Routing in your applications. An obvious next step would be to display a map like described in Use HERE Interactive Maps with ReactJS to place markers and the route.</p>\n\n<p>You can find <a href=\"https://github.com/j12y/HERE-react-matrix-routing\">source code</a> listings for the components mentioned in this post on GitHub.</p>",
        "summary": "<p>The annual tradition known as Black Friday leads many to go shopping at retail stores. Getting a route from your current location to another is a straight-forward navigation tool we’ve used many times. If we have multiple stops, how do we plan the most optimal route between them? That’s a job for Matrix Routing.</p>\n\n<h1>\n  <a href=\"#project\">\n  </a>\n  Project\n</h1>\n\n<p><em>Morpheus: Unfortunately, no one can be told what the Matrix is. You have to see it for yourself.</em></p>\n\n<p>For this project, we’ll demonstrate using the HERE <a href=\"https://developer.here.com/documentation#places\">Places</a> and <a href=\"https://developer.here.com/documentation#routing\">Routing</a> APIs with ReactJS to plan a series of stops.</p>\n\n<p>If you need to go to multiple stores such as Walmart, H-E-B, Gamestop and Kohl’s it may not matter which location or order you need to make the stops. To make the best use of your time as seen in the following screen capture, we can search for these stores and see the closest option highlighted in green when taking driving times and traffic into account. As we select a waypoint, the next closest store is highlighted from the remaining groups.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q2bg7xJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn2.hubspot.net/hubfs/2174253/matrix-routing.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q2bg7xJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn2.hubspot.net/hubfs/2174253/matrix-routing.gif\" alt=\"matrix demo\" width=\"880\" height=\"717\"></a></p>\n\n<p>Selecting multiple waypoints leads to an optimized shopping plan. As you build applications, taking into account where somebody is and where they are going can provide a much richer user experience by considering the context of location.</p>\n\n<h1>\n  <a href=\"#getting-started\">\n  </a>\n  Getting Started\n</h1>\n\n<p>As with other ReactJS tutorials, we’ll start with <code>create-react-app</code> as a project structure.</p>\n\n<p>We’ll use a few other libraries as well, <strong>axios</strong> for making HTTP requests, <strong>react-bootstrap</strong> for ready-made react components of the Bootstrap library, and <strong>styled-components</strong> because what I’ve always felt like I was missing in my life was the ability to set CSS properties more easily in JavaScript (🖤 web development).</p>\n\n<p>Here are the commands to create the app, install the dependencies, and then start the development web server:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>create-react-bootstrap app\ncd app\nnpm install --save styled-components axios react-bootstrap\nnpm start\n</code></pre>\n\n</div>\n\n\n\n<ul>\n<li><a href=\"https://github.com/facebook/create-react-app\">https://github.com/facebook/create-react-app</a></li>\n<li><a href=\"https://react-bootstrap.github.io/\">https://react-bootstrap.github.io/</a></li>\n<li><a href=\"https://www.styled-components.com/\">https://www.styled-components.com/</a></li>\n</ul>\n\n<h1>\n  <a href=\"#components\">\n  </a>\n  Components\n</h1>\n\n<p>We will develop a few React components that encapsulate the view and behavior of our user interface.</p>\n\n<ul>\n<li><p><strong>StartLocation.js</strong> is a component that will display a form for describing the starting location. We can change the latitude and longitude in the form or click on the globe icon to use our current location.</p></li>\n<li><p><strong>PlaceSearch.js</strong> is a component that displays a form to search for places near our starting location. The results are displayed in a list by distance so that the user can select one.</p></li>\n<li><p><strong>PlacePlanner.js</strong> is a component that is used for planning a route across multiple place searches. It uses the Matrix Routing algorithm to find the next nearest waypoint.</p></li>\n<li><p><strong>App.js</strong> is a component to wrap up everything into an application that includes the <em>StartLocation</em> and <em>PlacePlanner</em>.</p></li>\n</ul>\n\n<h1>\n  <a href=\"#app\">\n  </a>\n  App\n</h1>\n\n<p>Starting from the top most component, we define our App which is composed from the <em>StartLocation</em> and <em>PlacePlanner</em> components. We maintain the geocordinates of our origin as state in the App so that when it is changed by the StartLocation component we can keep things consistent in the PlacePlanner by passing them down as properties. You can see the view being defined by the render method:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">App</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">StartLocation</span>\n            <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">MyLocator</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocationChanged</span><span class=\"p\">}</span>\n            <span class=\"nx\">onLocate</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocate</span><span class=\"p\">}</span>\n            <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Wrapper</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">p</span><span class=\"o\">&gt;</span><span class=\"nx\">Search</span> <span class=\"k\">for</span> <span class=\"nx\">nearby</span> <span class=\"nx\">places</span><span class=\"p\">.</span><span class=\"o\">&lt;</span><span class=\"sr\">/p</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">PlacePlanner</span>\n            <span class=\"nx\">app_id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">here</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">}</span>\n            <span class=\"nx\">app_code</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">here</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">}</span>\n            <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Wrapper</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>    <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>onLocationChanged()</code> method passed to the <em>StartLocation</em> component is used for any changes made to the text forms.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onLocationChanged</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">state</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">;</span>\n    <span class=\"nx\">state</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">start</span><span class=\"dl\">'</span><span class=\"p\">][</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>onLocate()</code> method is there for handling HTML5 geolocation API to use the current location detected by the browser.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onLocate</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\n      <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n      <span class=\"nb\">navigator</span><span class=\"p\">.</span><span class=\"nx\">geolocation</span><span class=\"p\">.</span><span class=\"nx\">getCurrentPosition</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">position</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span>\n          <span class=\"na\">start</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">lat</span><span class=\"p\">:</span> <span class=\"nx\">position</span><span class=\"p\">.</span><span class=\"nx\">coords</span><span class=\"p\">.</span><span class=\"nx\">latitude</span><span class=\"p\">,</span>\n            <span class=\"na\">lng</span><span class=\"p\">:</span> <span class=\"nx\">position</span><span class=\"p\">.</span><span class=\"nx\">coords</span><span class=\"p\">.</span><span class=\"nx\">longitude</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">});</span>\n      <span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<h1>\n  <a href=\"#startlocation\">\n  </a>\n  StartLocation\n</h1>\n\n<p>The <em>StartLocation</em> is not much more than a simple Bootstrap form for collecting user input since the behaviors are passed in as properties.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">Wrapper</span><span class=\"o\">&gt;</span>\n\n      <span class=\"o\">&lt;</span><span class=\"nx\">Grid</span><span class=\"o\">&gt;</span>\n\n        <span class=\"o\">&lt;</span><span class=\"nx\">Row</span><span class=\"o\">&gt;</span>\n\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">ControlLabel</span><span class=\"o\">&gt;</span><span class=\"nx\">Latitude</span><span class=\"o\">&lt;</span><span class=\"sr\">/ControlLabel</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n            <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lat</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lat</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">ControlLabel</span><span class=\"o\">&gt;</span><span class=\"nx\">Longitude</span><span class=\"o\">&lt;</span><span class=\"sr\">/ControlLabel</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n            <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lng</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">lng</span><span class=\"dl\">\"</span>\n            <span class=\"nx\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n            <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Col</span> <span class=\"nx\">xs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span> <span class=\"nx\">md</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">br</span><span class=\"o\">/&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">Button</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onLocate</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"nx\">Glyphicon</span> <span class=\"nx\">glyph</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">globe</span><span class=\"dl\">\"</span><span class=\"o\">/&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"sr\">/Button</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/Col</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Row</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Row</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span><span class=\"p\">.</span><span class=\"nx\">Feedback</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Row</span><span class=\"err\">&gt;\n</span>\n        <span class=\"o\">&lt;</span><span class=\"sr\">/Grid</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/Wrapper</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>In order to render the <code>Glyphicon</code> you will need to update the <strong>public/index.html</strong> to pull in the bootstrap css from a CDN. The addition of the <code>&lt;Wrapper&gt;</code> was just a simple styled-component for additional presentation customization.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"kd\">const</span> <span class=\"nx\">Wrapper</span> <span class=\"o\">=</span> <span class=\"nx\">styled</span><span class=\"p\">.</span><span class=\"nx\">section</span><span class=\"s2\">`\n  padding: 1em;\n  background: papayawhip;\n`</span><span class=\"p\">;</span>\n</code></pre>\n\n</div>\n\n\n\n<h1>\n  <a href=\"#placesearch\">\n  </a>\n  PlaceSearch\n</h1>\n\n<p>We’re going to skip over the <em>PlacePlanner</em> component for a moment to take a closer look at the <em>PlaceSearch</em> component first. In this component we start making use of the HERE Location services to search for places.</p>\n\n<p>Digging into the <code>render()</code> method, we need a form that allows us to enter a search query. The <code>onChange()</code> and <code>onKeyPress()</code> are typical behavior of form entry so that state is maintained and the user can either click the search button or press <code>return</code> to trigger a places search.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">FormGroup</span><span class=\"o\">&gt;&lt;</span><span class=\"nx\">InputGroup</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">FormControl</span>\n          <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">text</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">bsSize</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">sm</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">destination</span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">}</span>\n          <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">destination</span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">}</span>\n          <span class=\"nx\">placeholder</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">Store Name</span><span class=\"dl\">\"</span>\n          <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onChange</span> <span class=\"p\">}</span>\n          <span class=\"nx\">onKeyPress</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"nx\">e</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">key</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">Enter</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onSearch</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span> <span class=\"p\">}}}</span>\n        <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"nx\">InputGroup</span><span class=\"p\">.</span><span class=\"nx\">Addon</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">Glyphicon</span> <span class=\"nx\">glyph</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">search</span><span class=\"dl\">\"</span> <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">onSearch</span> <span class=\"p\">}</span> <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/InputGroup.Addon</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/InputGroup&gt;&lt;/</span><span class=\"nx\">FormGroup</span><span class=\"o\">&gt;</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>Additionally in the <code>render()</code> method we are displaying the search results but we’ll come back to that. The Places API can be used for finding specific places with a text string. Unlike with the HERE Geocoder, this is not matching by address but by the name of a place and returning a set of results. You can use the HERE Maps API for JS which includes functions for displaying places. You’d use the same trick of <code>window.H</code> as described in the tutorial on how to Use HERE Interactive Maps with ReactJS to make it work. Since this project isn’t displaying a map and is just a simple GET request, I am using <strong>axios</strong>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onSearch</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n        <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span>\n          <span class=\"dl\">'</span><span class=\"s1\">https://places.api.here.com/places/v1/discover/search</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n          <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">params</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_id</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_code</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">q</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">q</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">size</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">at</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span>\n          <span class=\"p\">}}).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"na\">results</span><span class=\"p\">:</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">items</span><span class=\"p\">});</span>\n            <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">items</span><span class=\"p\">,</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">);</span>\n          <span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>A few notes about the parameters. You need the <em>app_id</em> and <em>app_code</em> typically used with any HERE developer account. The text query is given by the q parameter. I’ve limited the size to the 10 closest matches based on distance and given the at as the location from which to do a proximity search.</p>\n\n<p>Once the results are fetched from the request, we call <code>setState</code> which triggers the component to re-render as part of the typical React lifecycle. The rest of the render() method will use these results to display the search result listings.</p>\n\n<p>We have a helper method called <code>decodeVicinity()</code> to help process our Places response. The attribute typically has a HTML <code>&lt;br/&gt;</code> element which we don’t want so can strip it out.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"kd\">const</span> <span class=\"nx\">decodeVicinity</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">raw</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">e</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">div</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">raw</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">childNodes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">nodeValue</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>In our <code>render()</code> implementation we also loop over the results to make a list of items. Each item represents a place from our search in a list. In addition to simply listing all the matches there are two cases to handle. First, if the user has made a selection the <strong>className</strong> can be set to active which will cause it to be highlighted by Boostrap. Second, if the item is the next closest destination we will color it green by using the <strong>bsStyle</strong> attribute and setting it to <em>success</em>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"c1\">// Build up listing of locations that match query</span>\n<span class=\"kd\">let</span> <span class=\"nx\">destinations</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">option</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">ListGroupItem</span>\n          <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span>\n          <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span>\n          <span class=\"nx\">onClick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">onSelect</span><span class=\"p\">}</span>\n          <span class=\"nx\">header</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span>\n          <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">selected</span> <span class=\"o\">===</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">?</span> <span class=\"dl\">\"</span><span class=\"s2\">active</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">}</span>\n          <span class=\"nx\">bsStyle</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">nearest</span> <span class=\"o\">===</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">?</span> <span class=\"dl\">\"</span><span class=\"s2\">success</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">info</span><span class=\"dl\">\"</span> <span class=\"p\">}</span>\n          <span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">Fragment</span><span class=\"o\">&gt;</span><span class=\"p\">{</span><span class=\"nx\">decodeVicinity</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">vicinity</span><span class=\"p\">)}</span><span class=\"o\">&lt;</span><span class=\"sr\">/Fragment</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/ListGroupItem</span><span class=\"err\">&gt;\n</span>    <span class=\"p\">);</span>\n    <span class=\"nx\">destinations</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">option</span><span class=\"p\">);</span>\n    <span class=\"c1\">// ({item.position[0]}, {item.position[1]})</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>These items are then simply included in a <code>&lt;ListGroup&gt;</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">ListGroup</span><span class=\"o\">&gt;</span>\n  <span class=\"p\">{</span> <span class=\"nx\">destinations</span> <span class=\"p\">}</span>\n<span class=\"o\">&lt;</span><span class=\"sr\">/ListGroup</span><span class=\"err\">&gt;\n</span></code></pre>\n\n</div>\n\n\n\n<p>When a user selects one of the destinations, in addition to highlighting it making it <em>active</em> there is some behavior. By making a selection of a waypoint, this should trigger a new search for the next closest destination among remaining groups.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">onSelect</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"dl\">'</span><span class=\"s1\">selected</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">currentTarget</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">});</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">findNearest</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">idx</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>findNearest()</code> method is defined in the <em>PlacePlanner</em> component and passed down as a property so we’ll look at that component next.</p>\n\n<h1>\n  <a href=\"#placeplanner\">\n  </a>\n  PlacePlanner\n</h1>\n\n<p>The <em>PlacePlanner</em> component handles the optimization of our path by using the Matrix Routing algorithm across multiple places.</p>\n\n<p>The <code>render()</code> method makes use of our reusable <code>&lt;PlaceSearch/&gt;</code> component. A few properties are passed down for its behaviors as well as the methods defined in this component for identifying the next nearest destination and maintaining state of which places have been selected. The full definition of this method can be found in the full source code listing from the github repository.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"o\">&lt;</span><span class=\"nx\">PlaceSearch</span>\n        <span class=\"nx\">idx</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">}</span>\n        <span class=\"nx\">app_id</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_id</span> <span class=\"p\">}</span>\n        <span class=\"nx\">app_code</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_code</span> <span class=\"p\">}</span>\n        <span class=\"nx\">lat</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lat</span><span class=\"p\">}</span>\n        <span class=\"nx\">lng</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lng</span><span class=\"p\">}</span>\n        <span class=\"nx\">nearest</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"p\">}</span>\n        <span class=\"nx\">addPlaces</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">addPlaces</span> <span class=\"p\">}</span>\n        <span class=\"nx\">findNearest</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">findNearest</span> <span class=\"p\">}</span>\n        <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span></code></pre>\n\n</div>\n\n\n\n<p>The <code>addPlaces()</code> method is called from the <em>PlaceSearch</em> component to maintain a list of all potential destinations. That is, from our starting location by searching for “Walmart” we found 10 possible locations of Walmart we could go to. As we search for “H-E-B” we identify 10 more possible locations for a total of 20 different options to choose from. The selected state is being maintained because once we’ve identified a single Walmart to go to, we limit our list of remaining options to the 10 H-E-B locations. That’s what the following snippet demonstrates.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">results</span><span class=\"p\">,</span> <span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nx\">lng</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"c1\">// Update places with new search results</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">places</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">places</span><span class=\"p\">;</span>\n        <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">results</span><span class=\"p\">;</span>\n\n        <span class=\"c1\">// Combine all results across searched places where a selection has</span>\n        <span class=\"c1\">// not yet been made as our options for the next destination</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">p</span> <span class=\"k\">in</span> <span class=\"nx\">places</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">selected</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">]</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">undefined</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">o</span> <span class=\"k\">in</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n                    <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">({</span>\n                        <span class=\"na\">lat</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"na\">lng</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                        <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">][</span><span class=\"nx\">o</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">,</span>\n                    <span class=\"p\">});</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// If there are no more options then we are done searching</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">===</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// To be continued</span>\n        <span class=\"p\">...</span>\n    <span class=\"p\">}</span>\n\n</code></pre>\n\n</div>\n\n\n\n<p>Given a list of 40 potential options, how do I get started? The HERE Routing API supports Requesting a Matrix of Routes. This means that given N starting locations and M destination locations we can query the cost factor of going to each as a matrix. The cost factor is a representation in our case of the time it would take by driving in traffic to get to a given location. From the destination with the lowest cost factor, we can make a recommendation for the optimized path across multiple places. Once at that next destination, we can further compute from the remaining options the next best location to route to.</p>\n\n<p>In our case, we are looking at a 1:M query as demonstrated in the next snippet:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code>\n<span class=\"nx\">addPlaces</span><span class=\"p\">(</span><span class=\"nx\">idx</span><span class=\"p\">,</span> <span class=\"nx\">results</span><span class=\"p\">,</span> <span class=\"nx\">lat</span><span class=\"p\">,</span> <span class=\"nx\">lng</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"p\">...</span>\n        <span class=\"c1\">// continuing from above</span>\n\n\n        <span class=\"c1\">// Will build parameters including all of the potential destinations</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_id</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_id</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">app_code</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">app_code</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">fastest;car;traffic:enabled</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">matrixAttributes</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">ix,su</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">summaryattributes</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">all</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"dl\">'</span><span class=\"s1\">start0</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">lng</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">destination</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">lat</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">,</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">lng</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\">// Calculate matrix routing among options to make a recommendation</span>\n        <span class=\"kd\">const</span> <span class=\"nb\">self</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n        <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span>\n            <span class=\"dl\">'</span><span class=\"s1\">https://matrix.route.api.here.com/routing/7.2/calculatematrix.json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span><span class=\"dl\">'</span><span class=\"s1\">params</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">params</span><span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"kd\">const</span> <span class=\"nx\">matrix</span> <span class=\"o\">=</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">matrixEntry</span><span class=\"p\">;</span>\n\n                <span class=\"kd\">let</span> <span class=\"nx\">nearest</span> <span class=\"o\">=</span> <span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">;</span>\n                <span class=\"nx\">nearest</span><span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">id</span><span class=\"dl\">'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">matrix</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">.</span><span class=\"nx\">costFactor</span> <span class=\"o\">&lt;</span> <span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">costFactor</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"nx\">nearest</span> <span class=\"o\">=</span> <span class=\"nx\">matrix</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">summary</span><span class=\"p\">;</span>\n                        <span class=\"nx\">nearest</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n                <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span>\n                    <span class=\"na\">nearest</span><span class=\"p\">:</span> <span class=\"nx\">nearest</span>\n                <span class=\"p\">})</span>\n            <span class=\"p\">});</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span><span class=\"na\">places</span><span class=\"p\">:</span> <span class=\"nx\">places</span><span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>We are using the location id from our options so that the property can be used in our PlaceSearch component for highlighting.</p>\n\n<h1>\n  <a href=\"#summary\">\n  </a>\n  Summary\n</h1>\n\n<p><em>Neo: I’m going to show them a world without you. A world without rules and controls, without borders or boundaries. A world where anything is possible. Where we go from there is a choice I leave to you.</em></p>\n\n<p>This is not a ready-made production application but hopefully gives you a flavor of how and why to start using some of the HERE Location Services like Places and Routing in your applications. An obvious next step would be to display a map like described in Use HERE Interactive Maps with ReactJS to place markers and the route.</p>\n\n<p>You can find <a href=\"https://github.com/j12y/HERE-react-matrix-routing\">source code</a> listings for the components mentioned in this post on GitHub.</p>",
        "date_published": "2021-11-03T05:31:17.000Z",
        "author": {
          "name": "Jayson DeLancey"
        }
      },
      {
        "guid": "https://dev.to/w3webs/40-frontend-projects-for-beginners-easy-ideas-to-get-started-coding-frontend-beginners-advance-aeo",
        "url": "https://dev.to/w3webs/40-frontend-projects-for-beginners-easy-ideas-to-get-started-coding-frontend-beginners-advance-aeo",
        "title": "40+ Frontend Projects for Beginners – Easy Ideas to Get Started Coding Frontend [Beginners - Advance]",
        "content_html": "<p><span>If you are a developer or just getting started with the process, then you must already be aware of how important the role of </span><span>developing live projects</span><span> are. It will not only improve your coding skills but will also help you develop a passion for it. You can start by taking up online tutorials to learn a skill or two, but it must lead to starting to build the programs eventually.</span></p>\n<p><span>Read More: </span><span><span><b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/9-projects-you-can-do-to-become-a-front-end-master/&amp;ved=2ahUKEwilofe-rvjzAhVGbysKHR-RCv4QFnoECAUQAQ&amp;usg=AOvVaw2t7-_QAPDVzRhEVlb4h7WW\">40+ Frontend Projects for Beginners – Easy Ideas to Get Started Coding Frontend [Beginners - Advance]</a></b></span></span></p>",
        "summary": "<p><span>If you are a developer or just getting started with the process, then you must already be aware of how important the role of </span><span>developing live projects</span><span> are. It will not only improve your coding skills but will also help you develop a passion for it. You can start by taking up online tutorials to learn a skill or two, but it must lead to starting to build the programs eventually.</span></p>\n<p><span>Read More: </span><span><span><b><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.codelivly.com/9-projects-you-can-do-to-become-a-front-end-master/&amp;ved=2ahUKEwilofe-rvjzAhVGbysKHR-RCv4QFnoECAUQAQ&amp;usg=AOvVaw2t7-_QAPDVzRhEVlb4h7WW\">40+ Frontend Projects for Beginners – Easy Ideas to Get Started Coding Frontend [Beginners - Advance]</a></b></span></span></p>",
        "date_published": "2021-11-03T05:00:50.000Z",
        "author": {
          "name": "W3School"
        }
      },
      {
        "guid": "https://dev.to/realtoughcandy/whats-the-best-online-coding-platform-heres-an-encyclopedic-resource-that-shows-you-over-100-options-4b4k",
        "url": "https://dev.to/realtoughcandy/whats-the-best-online-coding-platform-heres-an-encyclopedic-resource-that-shows-you-over-100-options-4b4k",
        "title": "What's the best online coding platform? Here's an encyclopedic resource that shows you over 100 options!",
        "content_html": "<h2>\n  <a href=\"#codecademy-or-freecodecamp\">\n  </a>\n  Codecademy or freeCodeCamp?\n</h2>\n\n<h2>\n  <a href=\"#udemy-or-coursera\">\n  </a>\n  Udemy or Coursera?\n</h2>\n\n<h2>\n  <a href=\"#wes-bos-or-andrei-neagoie\">\n  </a>\n  Wes Bos or Andrei Neagoie?\n</h2>\n\n<p>Choices, choices. If you've ever wondered about some of these online coding platforms, but don't know where to start, check out the #1 new release <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\"><em>The Encyclopedia of Online Coding Platforms.</em></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0ieapVX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9cq85w4nkj6do0cdvdu.jpg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0ieapVX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9cq85w4nkj6do0cdvdu.jpg\" alt=\"The Encyclopedia of Online Coding Platforms book cover with computer screen and charts\" title=\"book cover\" width=\"880\" height=\"587\"></a></p>\n\n<p>This is my new book that is <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\">FREE through Kindle Unlimited</a>. It's also available as a paperback and hardcover. </p>\n\n<p>Want to know the best place to become a freelance web developer? Or perhaps write your first (or 1 millionth) line of JavaScript? <em>The Encyclopedia of Online Coding Platforms</em> has you covered.</p>\n\n<p>Featuring:</p>\n\n<ul>\n<li>large all-encompassing platforms like Udemy, Coursera, Codecademy, Treehouse, Udacity and more</li>\n<li>independent and niche sites from ZeroToMastery to CodingPhase</li>\n<li>critical platform insights from an industry veteran</li>\n<li>vital stats that detail pricing, format and beyond</li>\n<li>student feedback – what are real-life customers saying?\n-a special section for aspiring FAANG software engineers</li>\n<li>a useful \"best of\" page featuring the author's top platform picks </li>\n<li>and so much more.</li>\n</ul>\n\n<p>Some platforms include:</p>\n\n<ul>\n<li>AlgoExpert.io</li>\n<li>Codecademy</li>\n<li>Coursera</li>\n<li>DataCamp</li>\n<li>Educative.io</li>\n<li>freeCodeCamp</li>\n<li>HackerRank</li>\n<li>Laracasts</li>\n<li>LeetCode</li>\n<li>LinkedIn Learning</li>\n<li>OneMonth</li>\n<li>Pluralsight</li>\n<li>RealToughCandy.io</li>\n<li>Treehouse</li>\n<li>Udacity</li>\n<li>Udemy</li>\n<li>Web Dev Simplified</li>\n<li>Wes Bos</li>\n<li>ZeroToMastery.io (Andrei Neagoie)</li>\n<li>And MANY more!</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--97vFnyY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg8aph8zywhd99tyvhe1.jpg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--97vFnyY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg8aph8zywhd99tyvhe1.jpg\" alt=\"hardcover book edition of the encyclopedia of online coding platforms on rug next to cactus\" title=\"hardcover book edition of the encyclopedia of online coding platforms\" width=\"880\" height=\"1114\"></a></p>\n\n<h2>\n  <a href=\"#how-this-book-is-structured\">\n  </a>\n  HOW THIS BOOK IS STRUCTURED\n</h2>\n\n<p>First, the Featured Platforms section. These are the platforms mentioned most by our audience. The vital stats of each platform are listed below the chapter for easy reference. The narrative section of each listing describes the platform’s technical traits and provides a commentary on its various aspects ranging from curriculum to the user interface and beyond.</p>\n\n<p>The second part contains a FAANG section for aspiring FAANG engineers. These platforms mostly offer data structures and algorithms training featuring questions commonly asked at FAANG-level technical interviews.</p>\n\n<p>Finally, there is the Additional Platforms section. This section contains entries of smaller, independent sites.</p>\n\n<p>Pick up your copy now: <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\">https://www.amazon.com/dp/B09HGZR1CQ</a></p>",
        "summary": "<h2>\n  <a href=\"#codecademy-or-freecodecamp\">\n  </a>\n  Codecademy or freeCodeCamp?\n</h2>\n\n<h2>\n  <a href=\"#udemy-or-coursera\">\n  </a>\n  Udemy or Coursera?\n</h2>\n\n<h2>\n  <a href=\"#wes-bos-or-andrei-neagoie\">\n  </a>\n  Wes Bos or Andrei Neagoie?\n</h2>\n\n<p>Choices, choices. If you've ever wondered about some of these online coding platforms, but don't know where to start, check out the #1 new release <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\"><em>The Encyclopedia of Online Coding Platforms.</em></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0ieapVX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9cq85w4nkj6do0cdvdu.jpg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0ieapVX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9cq85w4nkj6do0cdvdu.jpg\" alt=\"The Encyclopedia of Online Coding Platforms book cover with computer screen and charts\" title=\"book cover\" width=\"880\" height=\"587\"></a></p>\n\n<p>This is my new book that is <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\">FREE through Kindle Unlimited</a>. It's also available as a paperback and hardcover. </p>\n\n<p>Want to know the best place to become a freelance web developer? Or perhaps write your first (or 1 millionth) line of JavaScript? <em>The Encyclopedia of Online Coding Platforms</em> has you covered.</p>\n\n<p>Featuring:</p>\n\n<ul>\n<li>large all-encompassing platforms like Udemy, Coursera, Codecademy, Treehouse, Udacity and more</li>\n<li>independent and niche sites from ZeroToMastery to CodingPhase</li>\n<li>critical platform insights from an industry veteran</li>\n<li>vital stats that detail pricing, format and beyond</li>\n<li>student feedback – what are real-life customers saying?\n-a special section for aspiring FAANG software engineers</li>\n<li>a useful \"best of\" page featuring the author's top platform picks </li>\n<li>and so much more.</li>\n</ul>\n\n<p>Some platforms include:</p>\n\n<ul>\n<li>AlgoExpert.io</li>\n<li>Codecademy</li>\n<li>Coursera</li>\n<li>DataCamp</li>\n<li>Educative.io</li>\n<li>freeCodeCamp</li>\n<li>HackerRank</li>\n<li>Laracasts</li>\n<li>LeetCode</li>\n<li>LinkedIn Learning</li>\n<li>OneMonth</li>\n<li>Pluralsight</li>\n<li>RealToughCandy.io</li>\n<li>Treehouse</li>\n<li>Udacity</li>\n<li>Udemy</li>\n<li>Web Dev Simplified</li>\n<li>Wes Bos</li>\n<li>ZeroToMastery.io (Andrei Neagoie)</li>\n<li>And MANY more!</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--97vFnyY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg8aph8zywhd99tyvhe1.jpg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--97vFnyY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg8aph8zywhd99tyvhe1.jpg\" alt=\"hardcover book edition of the encyclopedia of online coding platforms on rug next to cactus\" title=\"hardcover book edition of the encyclopedia of online coding platforms\" width=\"880\" height=\"1114\"></a></p>\n\n<h2>\n  <a href=\"#how-this-book-is-structured\">\n  </a>\n  HOW THIS BOOK IS STRUCTURED\n</h2>\n\n<p>First, the Featured Platforms section. These are the platforms mentioned most by our audience. The vital stats of each platform are listed below the chapter for easy reference. The narrative section of each listing describes the platform’s technical traits and provides a commentary on its various aspects ranging from curriculum to the user interface and beyond.</p>\n\n<p>The second part contains a FAANG section for aspiring FAANG engineers. These platforms mostly offer data structures and algorithms training featuring questions commonly asked at FAANG-level technical interviews.</p>\n\n<p>Finally, there is the Additional Platforms section. This section contains entries of smaller, independent sites.</p>\n\n<p>Pick up your copy now: <a href=\"https://www.amazon.com/dp/B09HGZR1CQ\">https://www.amazon.com/dp/B09HGZR1CQ</a></p>",
        "date_published": "2021-11-03T04:54:32.000Z",
        "author": {
          "name": "RealToughCandy.io"
        }
      }
    ]
  }